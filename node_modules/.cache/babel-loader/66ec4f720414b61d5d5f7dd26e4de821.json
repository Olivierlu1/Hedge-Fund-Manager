{"ast":null,"code":"import _objectSpread from \"/Users/olivier/Downloads/Hedge-Fund-Manager-Official/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { notHiredMessage } from '../functions';\nexport var insiderTechReducer = function insiderTechReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: {\n      isHired: false,\n      willHire: false\n    },\n    two: {\n      isHired: false,\n      willHire: false\n    },\n    three: {\n      isHired: false,\n      willHire: false\n    },\n    four: {\n      isHired: false,\n      willHire: false\n    },\n    five: {\n      isHired: false,\n      willHire: false\n    }\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'HIRE_TECH_ONE':\n      // called when hired is press\n      return _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          willHire: true\n        })\n      });\n\n    case 'HIRE_NEXT_TURN_TECH_ONE':\n      // called when next turn is pressed\n      return _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          isHired: true\n        })\n      });\n\n    case 'FIRE_TECH_ONE':\n      // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_TECH_TWO':\n      // called when hired is press\n      return _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          willHire: true\n        })\n      });\n\n    case 'HIRE_NEXT_TURN_TECH_TWO':\n      // called when next turn is pressed\n      return _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          isHired: true\n        })\n      });\n\n    case 'FIRE_TECH_TWO':\n      // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_TECH_THREE':\n      // called when hired is press\n      return _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          willHire: true\n        })\n      });\n\n    case 'HIRE_NEXT_TURN_TECH_THREE':\n      // called when next turn is pressed\n      return _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          isHired: true\n        })\n      });\n\n    case 'FIRE_TECH_THREE':\n      // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_TECH_FOUR':\n      // called when hired is press\n      var object7 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          willHire: true\n        })\n      });\n\n      return object7;\n\n    case 'HIRE_NEXT_TURN_TECH_FOUR':\n      // called when next turn is pressed\n      var object8 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          isHired: true\n        })\n      });\n\n      return object8;\n\n    case 'FIRE_TECH_FOUR':\n      // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_TECH_FIVE':\n      // called when hired is press\n      var object9 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          willHire: true\n        })\n      });\n\n      return object9;\n\n    case 'HIRE_NEXT_TURN_TECH_FIVE':\n      // called when next turn is pressed\n      var object10 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          isHired: true\n        })\n      });\n\n      return object10;\n\n    case 'FIRE_TECH_FIVE':\n      // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport var insiderPharmaReducer = function insiderPharmaReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: {\n      isHired: false,\n      willHire: false\n    },\n    two: {\n      isHired: false,\n      willHire: false\n    },\n    three: {\n      isHired: false,\n      willHire: false\n    },\n    four: {\n      isHired: false,\n      willHire: false\n    },\n    five: {\n      isHired: false,\n      willHire: false\n    }\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'HIRE_PHARMA_ONE':\n      // called when hired is press\n      var object = _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          willHire: true\n        })\n      });\n\n      return object;\n\n    case 'HIRE_NEXT_TURN_PHARMA_ONE':\n      // called when next turn is pressed\n      return _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          isHired: true\n        })\n      });\n\n    case 'FIRE_PHARMA_ONE':\n      // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_PHARMA_TWO':\n      // called when hired is press\n      var object3 = _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          willHire: true\n        })\n      });\n\n      return object3;\n\n    case 'HIRE_NEXT_TURN_PHARMA_TWO':\n      // called when next turn is pressed\n      var object4 = _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          isHired: true\n        })\n      });\n\n      return object4;\n\n    case 'FIRE_PHARMA_TWO':\n      // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_PHARMA_THREE':\n      // called when hired is press\n      var object5 = _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          willHire: true\n        })\n      });\n\n      return object5;\n\n    case 'HIRE_NEXT_TURN_PHARMA_THREE':\n      // called when next turn is pressed\n      var object6 = _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          isHired: true\n        })\n      });\n\n      return object6;\n\n    case 'FIRE_PHARMA_THREE':\n      // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_PHARMA_FOUR':\n      // called when hired is press\n      var object7 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          willHire: true\n        })\n      });\n\n      return object7;\n\n    case 'HIRE_NEXT_TURN_PHARMA_FOUR':\n      // called when next turn is pressed\n      var object8 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          isHired: true\n        })\n      });\n\n      return object8;\n\n    case 'FIRE_PHARMA_FOUR':\n      // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_PHARMA_FIVE':\n      // called when hired is press\n      var object9 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          willHire: true\n        })\n      });\n\n      return object9;\n\n    case 'HIRE_NEXT_TURN_PHARMA_FIVE':\n      // called when next turn is pressed\n      var object10 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          isHired: true\n        })\n      });\n\n      return object10;\n\n    case 'FIRE_PHARMA_FIVE':\n      // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport var insiderFoodReducer = function insiderFoodReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: {\n      isHired: false,\n      willHire: false\n    },\n    two: {\n      isHired: false,\n      willHire: false\n    },\n    three: {\n      isHired: false,\n      willHire: false\n    },\n    four: {\n      isHired: false,\n      willHire: false\n    },\n    five: {\n      isHired: false,\n      willHire: false\n    }\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'HIRE_FOOD_ONE':\n      // called when hired is press\n      var object = _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          willHire: true\n        })\n      });\n\n      return object;\n\n    case 'HIRE_NEXT_TURN_FOOD_ONE':\n      // called when next turn is pressed\n      return _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          isHired: true\n        })\n      });\n\n    case 'FIRE_FOOD_ONE':\n      // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_FOOD_TWO':\n      // called when hired is press\n      var object3 = _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          willHire: true\n        })\n      });\n\n      return object3;\n\n    case 'HIRE_NEXT_TURN_FOOD_TWO':\n      // called when next turn is pressed\n      var object4 = _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          isHired: true\n        })\n      });\n\n      return object4;\n\n    case 'FIRE_FOOD_TWO':\n      // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_FOOD_THREE':\n      // called when hired is press\n      var object5 = _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          willHire: true\n        })\n      });\n\n      return object5;\n\n    case 'HIRE_NEXT_TURN_FOOD_THREE':\n      // called when next turn is pressed\n      var object6 = _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          isHired: true\n        })\n      });\n\n      return object6;\n\n    case 'FIRE_FOOD_THREE':\n      // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_FOOD_FOUR':\n      // called when hired is press\n      var object7 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          willHire: true\n        })\n      });\n\n      return object7;\n\n    case 'HIRE_NEXT_TURN_FOOD_FOUR':\n      // called when next turn is pressed\n      var object8 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          isHired: true\n        })\n      });\n\n      return object8;\n\n    case 'FIRE_FOOD_FOUR':\n      // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_FOOD_FIVE':\n      // called when hired is press\n      var object9 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          willHire: true\n        })\n      });\n\n      return object9;\n\n    case 'HIRE_NEXT_TURN_FOOD_FIVE':\n      // called when next turn is pressed\n      var object10 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          isHired: true\n        })\n      });\n\n      return object10;\n\n    case 'FIRE_FOOD_FIVE':\n      // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport var insiderClothingReducer = function insiderClothingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: {\n      isHired: false,\n      willHire: false\n    },\n    two: {\n      isHired: false,\n      willHire: false\n    },\n    three: {\n      isHired: false,\n      willHire: false\n    },\n    four: {\n      isHired: false,\n      willHire: false\n    },\n    five: {\n      isHired: false,\n      willHire: false\n    }\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'HIRE_CLOTHING_ONE':\n      // called when hired is press\n      var object = _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          willHire: true\n        })\n      });\n\n      return object;\n\n    case 'HIRE_NEXT_TURN_CLOTHING_ONE':\n      // called when next turn is pressed\n      return _objectSpread({}, state, {\n        one: _objectSpread({}, state.one, {\n          isHired: true\n        })\n      });\n\n    case 'FIRE_CLOTHING_ONE':\n      // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          one: _objectSpread({}, state.one, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_CLOTHING_TWO':\n      // called when hired is press\n      var object3 = _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          willHire: true\n        })\n      });\n\n      return object3;\n\n    case 'HIRE_NEXT_TURN_CLOTHING_TWO':\n      // called when next turn is pressed\n      var object4 = _objectSpread({}, state, {\n        two: _objectSpread({}, state.two, {\n          isHired: true\n        })\n      });\n\n      return object4;\n\n    case 'FIRE_CLOTHING_TWO':\n      // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          two: _objectSpread({}, state.two, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_CLOTHING_THREE':\n      // called when hired is press\n      var object5 = _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          willHire: true\n        })\n      });\n\n      return object5;\n\n    case 'HIRE_NEXT_TURN_CLOTHING_THREE':\n      // called when next turn is pressed\n      var object6 = _objectSpread({}, state, {\n        three: _objectSpread({}, state.three, {\n          isHired: true\n        })\n      });\n\n      return object6;\n\n    case 'FIRE_CLOTHING_THREE':\n      // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          three: _objectSpread({}, state.three, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_CLOTHING_FOUR':\n      // called when hired is press\n      var object7 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          willHire: true\n        })\n      });\n\n      return object7;\n\n    case 'HIRE_NEXT_TURN_CLOTHING_FOUR':\n      // called when next turn is pressed\n      var object8 = _objectSpread({}, state, {\n        four: _objectSpread({}, state.four, {\n          isHired: true\n        })\n      });\n\n      return object8;\n\n    case 'FIRE_CLOTHING_FOUR':\n      // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          four: _objectSpread({}, state.four, {\n            willHire: false\n          })\n        });\n      }\n\n    case 'HIRE_CLOTHING_FIVE':\n      // called when hired is press\n      var object9 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          willHire: true\n        })\n      });\n\n      return object9;\n\n    case 'HIRE_NEXT_TURN_CLOTHING_FIVE':\n      // called when next turn is pressed\n      var object10 = _objectSpread({}, state, {\n        five: _objectSpread({}, state.five, {\n          isHired: true\n        })\n      });\n\n      return object10;\n\n    case 'FIRE_CLOTHING_FIVE':\n      // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false,\n            isHired: false\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          five: _objectSpread({}, state.five, {\n            willHire: false\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport var insiderTechMessage = function insiderTechMessage() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: notHiredMessage,\n    two: notHiredMessage,\n    three: notHiredMessage,\n    four: notHiredMessage,\n    five: notHiredMessage\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_TECH_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: action.payload\n      });\n\n    case 'CLEAR_TECH_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: \"\"\n      });\n\n    case 'UPDATE_TECH_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: action.payload\n      });\n\n    case 'CLEAR_TECH_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: \"\"\n      });\n\n    case 'UPDATE_TECH_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: action.payload\n      });\n\n    case 'CLEAR_TECH_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: \"\"\n      });\n\n    case 'UPDATE_TECH_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: action.payload\n      });\n\n    case 'CLEAR_TECH_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: \"\"\n      });\n\n    case 'UPDATE_TECH_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: action.payload\n      });\n\n    case 'CLEAR_TECH_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\nexport var insiderClothingMessage = function insiderClothingMessage() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: notHiredMessage,\n    two: notHiredMessage,\n    three: notHiredMessage,\n    four: notHiredMessage,\n    five: notHiredMessage\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_CLOTHING_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: action.payload\n      });\n\n    case 'CLEAR_CLOTHING_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: \"\"\n      });\n\n    case 'UPDATE_CLOTHING_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: action.payload\n      });\n\n    case 'CLEAR_CLOTHING_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: \"\"\n      });\n\n    case 'UPDATE_CLOTHING_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: action.payload\n      });\n\n    case 'CLEAR_CLOTHING_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: \"\"\n      });\n\n    case 'UPDATE_CLOTHING_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: action.payload\n      });\n\n    case 'CLEAR_CLOTHING_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: \"\"\n      });\n\n    case 'UPDATE_CLOTHING_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: action.payload\n      });\n\n    case 'CLEAR_CLOTHING_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\nexport var insiderPharmaMessage = function insiderPharmaMessage() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: notHiredMessage,\n    two: notHiredMessage,\n    three: notHiredMessage,\n    four: notHiredMessage,\n    five: notHiredMessage\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_PHARMA_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: action.payload\n      });\n\n    case 'CLEAR_PHARMA_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: \"\"\n      });\n\n    case 'UPDATE_PHARMA_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: action.payload\n      });\n\n    case 'CLEAR_PHARMA_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: \"\"\n      });\n\n    case 'UPDATE_PHARMA_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: action.payload\n      });\n\n    case 'CLEAR_PHARMA_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: \"\"\n      });\n\n    case 'UPDATE_PHARMA_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: action.payload\n      });\n\n    case 'CLEAR_PHARMA_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: \"\"\n      });\n\n    case 'UPDATE_PHARMA_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: action.payload\n      });\n\n    case 'CLEAR_PHARMA_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\nexport var insiderFoodMessage = function insiderFoodMessage() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    one: notHiredMessage,\n    two: notHiredMessage,\n    three: notHiredMessage,\n    four: notHiredMessage,\n    five: notHiredMessage\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_FOOD_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: action.payload\n      });\n\n    case 'CLEAR_FOOD_ONE_MESSAGE':\n      return Object.assign({}, state, {\n        one: \"\"\n      });\n\n    case 'UPDATE_FOOD_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: action.payload\n      });\n\n    case 'CLEAR_FOOD_TWO_MESSAGE':\n      return Object.assign({}, state, {\n        two: \"\"\n      });\n\n    case 'UPDATE_FOOD_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: action.payload\n      });\n\n    case 'CLEAR_FOOD_THREE_MESSAGE':\n      return Object.assign({}, state, {\n        three: \"\"\n      });\n\n    case 'UPDATE_FOOD_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: action.payload\n      });\n\n    case 'CLEAR_FOOD_FOUR_MESSAGE':\n      return Object.assign({}, state, {\n        four: \"\"\n      });\n\n    case 'UPDATE_FOOD_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: action.payload\n      });\n\n    case 'CLEAR_FOOD_FIVE_MESSAGE':\n      return Object.assign({}, state, {\n        five: \"\"\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/olivier/Downloads/Hedge-Fund-Manager-Official/src/reducers/insiderReducers.js"],"names":["notHiredMessage","insiderTechReducer","state","one","isHired","willHire","two","three","four","five","action","type","object7","object8","object9","object10","insiderPharmaReducer","object","object3","object4","object5","object6","insiderFoodReducer","insiderClothingReducer","insiderTechMessage","Object","assign","payload","insiderClothingMessage","insiderPharmaMessage","insiderFoodMessage"],"mappings":"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","sourcesContent":["import { notHiredMessage } from '../functions';\n\nexport const insiderTechReducer = (state = { one: { isHired: false, willHire: false}, two: { isHired: false, willHire: false}, three: { isHired: false, willHire: false}, four: { isHired: false, willHire: false}, five: { isHired: false, willHire: false}}, action) => {\n  switch (action.type) {\n    case 'HIRE_TECH_ONE': // called when hired is press\n      return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: true\n                    }\n      }\n    case 'HIRE_NEXT_TURN_TECH_ONE': // called when next turn is pressed\n      return {...state,\n                    one: {\n                      ...state.one,\n                      isHired: true,\n                    }\n      }\n    case 'FIRE_TECH_ONE': // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_TECH_TWO': // called when hired is press\n      return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: true\n                    }\n      }\n    case 'HIRE_NEXT_TURN_TECH_TWO': // called when next turn is pressed\n      return {...state,\n                    two: {\n                      ...state.two,\n                      isHired: true,\n                    }\n      }\n    case 'FIRE_TECH_TWO': // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_TECH_THREE': // called when hired is press\n      return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: true\n                    }\n      }\n    case 'HIRE_NEXT_TURN_TECH_THREE': // called when next turn is pressed\n      return {...state,\n                    three: {\n                      ...state.three,\n                      isHired: true,\n                    }\n      }\n    case 'FIRE_TECH_THREE': // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_TECH_FOUR': // called when hired is press\n      const object7 = {...state,\n                    four: {\n                      ...state.four,\n                      willHire: true\n                    }\n      }\n      return object7;\n    case 'HIRE_NEXT_TURN_TECH_FOUR': // called when next turn is pressed\n      const object8 = {...state,\n                    four: {\n                      ...state.four,\n                      isHired: true,\n                    }\n      }\n      return object8;\n    case 'FIRE_TECH_FOUR': // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_TECH_FIVE': // called when hired is press\n      const object9 = {...state,\n                    five: {\n                      ...state.five,\n                      willHire: true\n                    }\n      }\n      return object9;\n    case 'HIRE_NEXT_TURN_TECH_FIVE': // called when next turn is pressed\n      const object10 = {...state,\n                    five: {\n                      ...state.five,\n                      isHired: true,\n                    }\n      }\n      return object10;\n    case 'FIRE_TECH_FIVE': // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false\n                    }\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport const insiderPharmaReducer = (state = { one: { isHired: false, willHire: false}, two: { isHired: false, willHire: false}, three: { isHired: false, willHire: false}, four: { isHired: false, willHire: false}, five: { isHired: false, willHire: false}}, action) => {\n  switch(action.type) {\n    case 'HIRE_PHARMA_ONE': // called when hired is press\n      const object = {...state,\n                    one: {\n                      ...state.one,\n                      willHire: true\n                    }\n      }\n      return object;\n    case 'HIRE_NEXT_TURN_PHARMA_ONE': // called when next turn is pressed\n      return {...state,\n                    one: {\n                      ...state.one,\n                      isHired: true\n                    }\n      }\n    case 'FIRE_PHARMA_ONE': // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_PHARMA_TWO': // called when hired is press\n      const object3 = {...state,\n                    two: {\n                      ...state.two,\n                      willHire: true\n                    }\n      }\n      return object3;\n    case 'HIRE_NEXT_TURN_PHARMA_TWO': // called when next turn is pressed\n      const object4 = {...state,\n                    two: {\n                      ...state.two,\n                      isHired: true\n                    }\n      }\n      return object4;\n    case 'FIRE_PHARMA_TWO': // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_PHARMA_THREE': // called when hired is press\n      const object5 = {...state,\n                    three: {\n                      ...state.three,\n                      willHire: true\n                    }\n      }\n      return object5;\n    case 'HIRE_NEXT_TURN_PHARMA_THREE': // called when next turn is pressed\n      const object6 = {...state,\n                    three: {\n                      ...state.three,\n                      isHired: true\n                    }\n      }\n      return object6;\n    case 'FIRE_PHARMA_THREE': // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_PHARMA_FOUR': // called when hired is press\n      const object7 = {...state,\n                    four: {\n                      ...state.four,\n                      willHire: true\n                    }\n      }\n      return object7;\n    case 'HIRE_NEXT_TURN_PHARMA_FOUR': // called when next turn is pressed\n      const object8 = {...state,\n                    four: {\n                      ...state.four,\n                      isHired: true\n                    }\n      }\n      return object8;\n    case 'FIRE_PHARMA_FOUR': // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_PHARMA_FIVE': // called when hired is press\n      const object9 = {...state,\n                    five: {\n                      ...state.five,\n                      willHire: true\n                    }\n      }\n      return object9;\n    case 'HIRE_NEXT_TURN_PHARMA_FIVE': // called when next turn is pressed\n      const object10 = {...state,\n                    five: {\n                      ...state.five,\n                      isHired: true\n                    }\n      }\n      return object10;\n    case 'FIRE_PHARMA_FIVE': // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false\n                    }\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport const insiderFoodReducer = (state = { one: { isHired: false, willHire: false}, two: { isHired: false, willHire: false}, three: { isHired: false, willHire: false}, four: { isHired: false, willHire: false}, five: { isHired: false, willHire: false}}, action) => {\n  switch(action.type) {\n    case 'HIRE_FOOD_ONE': // called when hired is press\n      const object = {...state,\n                    one: {\n                      ...state.one,\n                      willHire: true\n                    }\n      }\n      return object;\n    case 'HIRE_NEXT_TURN_FOOD_ONE': // called when next turn is pressed\n      return {...state,\n                    one: {\n                      ...state.one,\n                      isHired: true\n                    }\n      }\n    case 'FIRE_FOOD_ONE': // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_FOOD_TWO': // called when hired is press\n      const object3 = {...state,\n                    two: {\n                      ...state.two,\n                      willHire: true\n                    }\n      }\n      return object3;\n    case 'HIRE_NEXT_TURN_FOOD_TWO': // called when next turn is pressed\n      const object4 = {...state,\n                    two: {\n                      ...state.two,\n                      isHired: true\n                    }\n      }\n      return object4;\n    case 'FIRE_FOOD_TWO': // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_FOOD_THREE': // called when hired is press\n      const object5 = {...state,\n                    three: {\n                      ...state.three,\n                      willHire: true\n                    }\n      }\n      return object5;\n    case 'HIRE_NEXT_TURN_FOOD_THREE': // called when next turn is pressed\n      const object6 = {...state,\n                    three: {\n                      ...state.three,\n                      isHired: true\n                    }\n      }\n      return object6;\n    case 'FIRE_FOOD_THREE': // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_FOOD_FOUR': // called when hired is press\n      const object7 = {...state,\n                    four: {\n                      ...state.four,\n                      willHire: true\n                    }\n      }\n      return object7;\n    case 'HIRE_NEXT_TURN_FOOD_FOUR': // called when next turn is pressed\n      const object8 = {...state,\n                    four: {\n                      ...state.four,\n                      isHired: true\n                    }\n      }\n      return object8;\n    case 'FIRE_FOOD_FOUR': // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_FOOD_FIVE': // called when hired is press\n      const object9 = {...state,\n                    five: {\n                      ...state.five,\n                      willHire: true\n                    }\n      }\n      return object9;\n    case 'HIRE_NEXT_TURN_FOOD_FIVE': // called when next turn is pressed\n      const object10 = {...state,\n                    five: {\n                      ...state.five,\n                      isHired: true\n                    }\n      }\n      return object10;\n    case 'FIRE_FOOD_FIVE': // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false\n                    }\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport const insiderClothingReducer = (state = { one: { isHired: false, willHire: false}, two: { isHired: false, willHire: false}, three: { isHired: false, willHire: false}, four: { isHired: false, willHire: false}, five: { isHired: false, willHire: false}}, action) => {\n  switch(action.type) {\n    case 'HIRE_CLOTHING_ONE': // called when hired is press\n      const object = {...state,\n                    one: {\n                      ...state.one,\n                      willHire: true\n                    }\n      }\n      return object;\n    case 'HIRE_NEXT_TURN_CLOTHING_ONE': // called when next turn is pressed\n      return {...state,\n                    one: {\n                      ...state.one,\n                      isHired: true\n                    }\n      }\n    case 'FIRE_CLOTHING_ONE': // called when next turn is pressed\n      if (state.one.willHire === false) {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    one: {\n                      ...state.one,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_CLOTHING_TWO': // called when hired is press\n      const object3 = {...state,\n                    two: {\n                      ...state.two,\n                      willHire: true\n                    }\n      }\n      return object3;\n    case 'HIRE_NEXT_TURN_CLOTHING_TWO': // called when next turn is pressed\n      const object4 = {...state,\n                    two: {\n                      ...state.two,\n                      isHired: true\n                    }\n      }\n      return object4;\n    case 'FIRE_CLOTHING_TWO': // called when next turn is pressed\n      if (state.two.willHire === false) {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    two: {\n                      ...state.two,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_CLOTHING_THREE': // called when hired is press\n      const object5 = {...state,\n                    three: {\n                      ...state.three,\n                      willHire: true\n                    }\n      }\n      return object5;\n    case 'HIRE_NEXT_TURN_CLOTHING_THREE': // called when next turn is pressed\n      const object6 = {...state,\n                    three: {\n                      ...state.three,\n                      isHired: true\n                    }\n      }\n      return object6;\n    case 'FIRE_CLOTHING_THREE': // called when next turn is pressed\n      if (state.three.willHire === false) {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    three: {\n                      ...state.three,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_CLOTHING_FOUR': // called when hired is press\n      const object7 = {...state,\n                    four: {\n                      ...state.four,\n                      willHire: true\n                    }\n      }\n      return object7;\n    case 'HIRE_NEXT_TURN_CLOTHING_FOUR': // called when next turn is pressed\n      const object8 = {...state,\n                    four: {\n                      ...state.four,\n                      isHired: true\n                    }\n      }\n      return object8;\n    case 'FIRE_CLOTHING_FOUR': // called when next turn is pressed\n      if (state.four.willHire === false) {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    four: {\n                      ...state.four,\n                      willHire: false\n                    }\n        }\n      }\n    case 'HIRE_CLOTHING_FIVE': // called when hired is press\n      const object9 = {...state,\n                    five: {\n                      ...state.five,\n                      willHire: true\n                    }\n      }\n      return object9;\n    case 'HIRE_NEXT_TURN_CLOTHING_FIVE': // called when next turn is pressed\n      const object10 = {...state,\n                    five: {\n                      ...state.five,\n                      isHired: true\n                    }\n      }\n      return object10;\n    case 'FIRE_CLOTHING_FIVE': // called when next turn is pressed\n      if (state.five.willHire === false) {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false,\n                      isHired: false\n                    }\n      }\n      } else {\n        return {...state,\n                    five: {\n                      ...state.five,\n                      willHire: false\n                    }\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport const insiderTechMessage = (state = {one: notHiredMessage, two: notHiredMessage, three: notHiredMessage, four: notHiredMessage, five: notHiredMessage}, action) => {\n  switch (action.type) {\n    case 'UPDATE_TECH_ONE_MESSAGE':\n      return Object.assign({}, state, { one: action.payload });\n    case 'CLEAR_TECH_ONE_MESSAGE':\n      return Object.assign({}, state, { one: \"\" });\n    case 'UPDATE_TECH_TWO_MESSAGE':\n      return Object.assign({}, state, { two: action.payload });\n    case 'CLEAR_TECH_TWO_MESSAGE':\n      return Object.assign({}, state, { two: \"\" });\n    case 'UPDATE_TECH_THREE_MESSAGE':\n      return Object.assign({}, state, { three: action.payload });\n    case 'CLEAR_TECH_THREE_MESSAGE':\n      return Object.assign({}, state, { three: \"\" });\n    case 'UPDATE_TECH_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: action.payload });\n    case 'CLEAR_TECH_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: \"\" });\n    case 'UPDATE_TECH_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: action.payload });\n    case 'CLEAR_TECH_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: \"\" });\n    default:\n      return state;\n  }\n}\n\nexport const insiderClothingMessage = (state = {one: notHiredMessage, two: notHiredMessage, three: notHiredMessage, four: notHiredMessage, five: notHiredMessage}, action) => {\n  switch (action.type) {\n    case 'UPDATE_CLOTHING_ONE_MESSAGE':\n      return Object.assign({}, state, { one: action.payload });\n    case 'CLEAR_CLOTHING_ONE_MESSAGE':\n      return Object.assign({}, state, { one: \"\" });\n    case 'UPDATE_CLOTHING_TWO_MESSAGE':\n      return Object.assign({}, state, { two: action.payload });\n    case 'CLEAR_CLOTHING_TWO_MESSAGE':\n      return Object.assign({}, state, { two: \"\" });\n    case 'UPDATE_CLOTHING_THREE_MESSAGE':\n      return Object.assign({}, state, { three: action.payload });\n    case 'CLEAR_CLOTHING_THREE_MESSAGE':\n      return Object.assign({}, state, { three: \"\" });\n    case 'UPDATE_CLOTHING_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: action.payload });\n    case 'CLEAR_CLOTHING_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: \"\" });\n    case 'UPDATE_CLOTHING_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: action.payload });\n    case 'CLEAR_CLOTHING_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: \"\" });\n    default:\n      return state;\n  }\n}\n\nexport const insiderPharmaMessage = (state = {one: notHiredMessage, two: notHiredMessage, three: notHiredMessage, four: notHiredMessage, five: notHiredMessage}, action) => {\n  switch (action.type) {\n    case 'UPDATE_PHARMA_ONE_MESSAGE':\n      return Object.assign({}, state, { one: action.payload });\n    case 'CLEAR_PHARMA_ONE_MESSAGE':\n      return Object.assign({}, state, { one: \"\" });\n    case 'UPDATE_PHARMA_TWO_MESSAGE':\n      return Object.assign({}, state, { two: action.payload });\n    case 'CLEAR_PHARMA_TWO_MESSAGE':\n      return Object.assign({}, state, { two: \"\" });\n    case 'UPDATE_PHARMA_THREE_MESSAGE':\n      return Object.assign({}, state, { three: action.payload });\n    case 'CLEAR_PHARMA_THREE_MESSAGE':\n      return Object.assign({}, state, { three: \"\" });\n    case 'UPDATE_PHARMA_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: action.payload });\n    case 'CLEAR_PHARMA_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: \"\" });\n    case 'UPDATE_PHARMA_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: action.payload });\n    case 'CLEAR_PHARMA_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: \"\" });\n    default:\n      return state;\n  }\n}\n\nexport const insiderFoodMessage = (state = {one: notHiredMessage, two: notHiredMessage, three: notHiredMessage, four: notHiredMessage, five: notHiredMessage}, action) => {\n  switch (action.type) {\n    case 'UPDATE_FOOD_ONE_MESSAGE':\n      return Object.assign({}, state, { one: action.payload });\n    case 'CLEAR_FOOD_ONE_MESSAGE':\n      return Object.assign({}, state, { one: \"\" });\n    case 'UPDATE_FOOD_TWO_MESSAGE':\n      return Object.assign({}, state, { two: action.payload });\n    case 'CLEAR_FOOD_TWO_MESSAGE':\n      return Object.assign({}, state, { two: \"\" });\n    case 'UPDATE_FOOD_THREE_MESSAGE':\n      return Object.assign({}, state, { three: action.payload });\n    case 'CLEAR_FOOD_THREE_MESSAGE':\n      return Object.assign({}, state, { three: \"\" });\n    case 'UPDATE_FOOD_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: action.payload });\n    case 'CLEAR_FOOD_FOUR_MESSAGE':\n      return Object.assign({}, state, { four: \"\" });\n    case 'UPDATE_FOOD_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: action.payload });\n    case 'CLEAR_FOOD_FIVE_MESSAGE':\n      return Object.assign({}, state, { five: \"\" });\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}