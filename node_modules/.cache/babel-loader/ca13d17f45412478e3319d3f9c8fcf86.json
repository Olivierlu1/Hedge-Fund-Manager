{"ast":null,"code":"import _toConsumableArray from \"/Users/olivier/Downloads/Hedge-Fund-Manager-Official/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/olivier/Downloads/Hedge-Fund-Manager-Official/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { generateTwoRandomNumbers } from '../functions';\nvar initialTechState = {\n  apple: {\n    price: \"2000\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  google: {\n    price: \"1200\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  microsoft: {\n    price: \"150\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  facebook: {\n    price: \"400\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  dropbox: {\n    price: \"35\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random() * 10,\n  flux_val_up_neg: Math.random() * 5,\n  flux_val_down_pos: Math.random() * 5,\n  flux_val_down_neg: Math.random() * 8,\n  trend: generateTwoRandomNumbers()\n};\nvar initialPharmaState = {\n  pfizer: {\n    price: \"40\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  novartis: {\n    price: \"90\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  hoffmann: {\n    price: \"25\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  merck: {\n    price: \"80\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  johnson: {\n    price: \"160\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random() * 10,\n  flux_val_up_neg: Math.random() * 5,\n  flux_val_down_pos: Math.random() * 5,\n  flux_val_down_neg: Math.random() * 8,\n  trend: generateTwoRandomNumbers()\n};\nvar initialFoodState = {\n  cargill: {\n    price: \"10\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  nestle: {\n    price: \"100\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  pepsi: {\n    price: \"100\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  archer: {\n    price: \"5\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  sysco: {\n    price: \"70\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random() * 10,\n  flux_val_up_neg: Math.random() * 5,\n  flux_val_down_pos: Math.random() * 5,\n  flux_val_down_neg: Math.random() * 8,\n  trend: generateTwoRandomNumbers()\n};\nvar initialClothingState = {\n  dior: {\n    price: \"100\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  nike: {\n    price: \"75\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  adidas: {\n    price: \"200\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  gucci: {\n    price: \"85\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  hermes: {\n    price: \"105\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random() * 10,\n  flux_val_up_neg: Math.random() * 5,\n  flux_val_down_pos: Math.random() * 5,\n  flux_val_down_neg: Math.random() * 8,\n  trend: generateTwoRandomNumbers()\n};\nvar initialCryptoState = {\n  bitcoin: {\n    price: \"5000\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  eos: {\n    price: \"6\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  ethereum: {\n    price: \"2000\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  xrp: {\n    price: \"850\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  tron: {\n    price: \"1050\",\n    sharesOwned: 0,\n    totalValue: 0\n  }\n};\nvar initialTechPriceState = {\n  apple: [],\n  google: [],\n  microsoft: [],\n  facebook: [],\n  dropbox: []\n};\nvar initialPharmaPriceState = {\n  pfizer: [],\n  novartis: [],\n  hoffmann: [],\n  merck: [],\n  johnson: []\n};\nvar initialFoodPriceState = {\n  cargill: [],\n  nestle: [],\n  pepsi: [],\n  archer: [],\n  sysco: []\n};\nvar initialClothingPriceState = {\n  dior: [],\n  nike: [],\n  adidas: [],\n  gucci: [],\n  hermes: []\n};\nvar initialCryptoPriceState = {\n  bitcoin: [],\n  eos: [],\n  ethereum: [],\n  xrp: [],\n  tron: []\n};\nexport var clothingStockPricesReducer = function clothingStockPricesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialClothingPriceState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_CLOTHING_STOCK_PRICE':\n      return _objectSpread({}, state, {\n        dior: [].concat(_toConsumableArray(state.dior), [action.payload.dior]),\n        nike: [].concat(_toConsumableArray(state.nike), [action.payload.nike]),\n        adidas: [].concat(_toConsumableArray(state.adidas), [action.payload.adidas]),\n        gucci: [].concat(_toConsumableArray(state.gucci), [action.payload.gucci]),\n        hermes: [].concat(_toConsumableArray(state.hermes), [action.payload.hermes])\n      });\n\n    default:\n      return state;\n  }\n};\nexport var cryptoStockPricesReducer = function cryptoStockPricesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialCryptoPriceState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_CRYPTO_STOCK_PRICE':\n      return _objectSpread({}, state, {\n        eos: [].concat(_toConsumableArray(state.eos), [action.payload.eos]),\n        bitcoin: [].concat(_toConsumableArray(state.bitcoin), [action.payload.bitcoin]),\n        xrp: [].concat(_toConsumableArray(state.xrp), [action.payload.xrp]),\n        tron: [].concat(_toConsumableArray(state.tron), [action.payload.tron]),\n        ethereum: [].concat(_toConsumableArray(state.ethereum), [action.payload.ethereum])\n      });\n\n    default:\n      return state;\n  }\n};\nexport var techStockPricesReducer = function techStockPricesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialTechPriceState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TECH_STOCK_PRICE':\n      return _objectSpread({}, state, {\n        apple: [].concat(_toConsumableArray(state.apple), [action.payload.apple]),\n        google: [].concat(_toConsumableArray(state.google), [action.payload.google]),\n        dropbox: [].concat(_toConsumableArray(state.dropbox), [action.payload.dropbox]),\n        facebook: [].concat(_toConsumableArray(state.facebook), [action.payload.facebook]),\n        microsoft: [].concat(_toConsumableArray(state.microsoft), [action.payload.microsoft])\n      });\n\n    default:\n      return state;\n  }\n};\nexport var foodStockPricesReducer = function foodStockPricesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialFoodPriceState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_FOOD_STOCK_PRICE':\n      return _objectSpread({}, state, {\n        cargill: [].concat(_toConsumableArray(state.cargill), [action.payload.cargill]),\n        nestle: [].concat(_toConsumableArray(state.nestle), [action.payload.nestle]),\n        pepsi: [].concat(_toConsumableArray(state.pepsi), [action.payload.pepsi]),\n        archer: [].concat(_toConsumableArray(state.archer), [action.payload.archer]),\n        sysco: [].concat(_toConsumableArray(state.sysco), [action.payload.sysco])\n      });\n\n    default:\n      return state;\n  }\n};\nexport var pharmaStockPricesReducer = function pharmaStockPricesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPharmaPriceState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_PHARMA_STOCK_PRICE':\n      return _objectSpread({}, state, {\n        pfizer: [].concat(_toConsumableArray(state.pfizer), [action.payload.pfizer]),\n        novartis: [].concat(_toConsumableArray(state.novartis), [action.payload.novartis]),\n        merck: [].concat(_toConsumableArray(state.merck), [action.payload.merck]),\n        johnson: [].concat(_toConsumableArray(state.johnson), [action.payload.johnson]),\n        hoffmann: [].concat(_toConsumableArray(state.hoffmann), [action.payload.hoffmann])\n      });\n\n    default:\n      return state;\n  }\n}; // for updating stock prices, stock prices should be in an array\n\nexport var pharmaStockReducer = function pharmaStockReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPharmaState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var value;\n\n  switch (action.type) {\n    // calls update pharma stock by:\n    // updatePharmaStockPrice(stock, values)\n    case 'UPDATE_PHARMA_STOCK_PRICE':\n      var prices = {};\n\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random() * 6;\n\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"pfizer\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"pfizer\"] = state.pfizer.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"pfizer\"] = state.pfizer.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"pfizer\"] = state.pfizer.price * (1 + flux_val / 100);\n              } else {\n                prices[\"pfizer\"] = state.pfizer.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 0) {\n              if (state.up_or_down === 0) {\n                prices[\"pfizer\"] = state.pfizer.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"pfizer\"] = state.pfizer.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 0) {\n              if (state.up_or_down === 0) {\n                prices[\"pfizer\"] = state.pfizer.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"pfizer\"] = state.pfizer.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"pfizer\"] = state.pfizer.price * (1 + flux_val / 100);\n              } else {\n                prices[\"pfizer\"] = state.pfizer.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"novartis\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"novartis\"] = state.novartis.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"novartis\"] = state.novartis.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"novartis\"] = state.novartis.price * (1 + flux_val / 100);\n              } else {\n                prices[\"novartis\"] = state.novartis.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 1) {\n              if (up_or_down === 0) {\n                prices[\"novartis\"] = state.novartis.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"novartis\"] = state.novartis.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 1) {\n              if (up_or_down === 0) {\n                prices[\"novartis\"] = state.novartis.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"novartis\"] = state.novartis.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"novartis\"] = state.novartis.price * (1 + flux_val / 100);\n              } else {\n                prices[\"novartis\"] = state.novartis.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"hoffmann\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 + flux_val / 100);\n              } else {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 2) {\n              if (up_or_down === 0) {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 2) {\n              if (up_or_down === 0) {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 + flux_val / 100);\n              } else {\n                prices[\"hoffmann\"] = state.hoffmann.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"merck\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"merck\"] = state.merck.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"merck\"] = state.merck.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"merck\"] = state.merck.price * (1 + flux_val / 100);\n              } else {\n                prices[\"merck\"] = state.merck.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 3) {\n              if (up_or_down === 0) {\n                prices[\"merck\"] = state.merck.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"merck\"] = state.merck.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 3) {\n              if (up_or_down === 0) {\n                prices[\"merck\"] = state.merck.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"merck\"] = state.merck.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"merck\"] = state.merck.price * (1 + flux_val / 100);\n              } else {\n                prices[\"merck\"] = state.merck.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"johnson\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"johnson\"] = state.johnson.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"johnson\"] = state.johnson.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"johnson\"] = state.johnson.price * (1 + flux_val / 100);\n              } else {\n                prices[\"johnson\"] = state.johnson.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 4) {\n              if (up_or_down === 0) {\n                prices[\"johnson\"] = state.johnson.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"johnson\"] = state.johnson.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 4) {\n              if (up_or_down === 0) {\n                prices[\"johnson\"] = state.johnson.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"johnson\"] = state.johnson.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"johnson\"] = state.johnson.price * (1 + flux_val / 100);\n              } else {\n                prices[\"johnson\"] = state.johnson.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        }\n      }\n\n      return _objectSpread({}, state, {\n        pfizer: _objectSpread({}, state.pfizer, {\n          price: prices.pfizer\n        }),\n        novartis: _objectSpread({}, state.novartis, {\n          price: prices.novartis\n        }),\n        hoffmann: _objectSpread({}, state.hoffmann, {\n          price: prices.hoffmann\n        }),\n        merck: _objectSpread({}, state.merck, {\n          price: prices.merck\n        }),\n        johnson: _objectSpread({}, state.johnson, {\n          price: prices.johnson\n        })\n      });\n\n    case 'BOUGHT_PHARMA_STOCK':\n      switch (action.payload.stock) {\n        case 'pfizer':\n          value = state.pfizer.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            pfizer: _objectSpread({}, state.pfizer, {\n              sharesOwned: value,\n              totalValue: value * state.pfizer.price\n            })\n          });\n\n        case 'novartis':\n          value = state.novartis.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            novartis: _objectSpread({}, state.novartis, {\n              sharesOwned: value,\n              totalValue: value * state.novartis.price\n            })\n          });\n\n        case 'hoffmann':\n          value = state.hoffmann.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            hoffmann: _objectSpread({}, state.hoffmann, {\n              sharesOwned: value,\n              totalValue: value * state.hoffmann.price\n            })\n          });\n\n        case 'merck':\n          value = state.merck.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            merck: _objectSpread({}, state.merck, {\n              sharesOwned: value,\n              totalValue: value * state.merck.price\n            })\n          });\n\n        case 'johnson':\n          value = state.johnson.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            johnson: _objectSpread({}, state.johnson, {\n              sharesOwned: value,\n              totalValue: value * state.johnson.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case 'SOLD_PHARMA_STOCK':\n      switch (action.payload.stock) {\n        case 'pfizer':\n          value = state.pfizer.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            pfizer: _objectSpread({}, state.pfizer, {\n              sharesOwned: value,\n              totalValue: value * state.pfizer.price\n            })\n          });\n\n        case 'novartis':\n          value = state.novartis.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            novartis: _objectSpread({}, state.novartis, {\n              sharesOwned: value,\n              totalValue: value * state.novartis.price\n            })\n          });\n\n        case 'hoffmann':\n          value = state.hoffmann.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            hoffmann: _objectSpread({}, state.hoffmann, {\n              sharesOwned: value,\n              totalValue: value * state.hoffmann.price\n            })\n          });\n\n        case 'merck':\n          value = state.merck.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            merck: _objectSpread({}, state.merck, {\n              sharesOwned: value,\n              totalValue: value * state.merck.price\n            })\n          });\n\n        case 'johnson':\n          value = state.johnson.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            johnson: _objectSpread({}, state.johnson, {\n              sharesOwned: value,\n              totalValue: value * state.johnson.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\nexport var cryptoStockReducer = function cryptoStockReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialCryptoState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var value;\n\n  switch (action.type) {\n    // calls update pharma stock by:\n    // updatePharmaStockPrice(stock, values)\n    case 'UPDATE_CRYPTO_STOCK_PRICE':\n      var prices = {};\n\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random() * 150;\n\n        if (i === 0) {\n          if (up_or_down === 0) {\n            prices[\"eos\"] = state.eos.price * (1 + flux_val / 100);\n          } else {\n            if (state.eos.price * (1 - flux_val / 100 < 0)) {\n              prices[\"eos\"] = 800;\n            } else {\n              prices[\"eos\"] = state.eos.price * (1 - flux_val / 100);\n            }\n          }\n        } else if (i === 1) {\n          if (up_or_down === 0) {\n            prices[\"xrp\"] = state.xrp.price * (1 + flux_val / 100);\n          } else {\n            if (state.xrp.price * (1 - flux_val / 100 < 0)) {\n              prices[\"xrp\"] = 750;\n            } else {\n              prices[\"xrp\"] = state.xrp.price * (1 - flux_val / 100);\n            }\n          }\n        } else if (i === 2) {\n          if (up_or_down === 0) {\n            prices[\"ethereum\"] = state.ethereum.price * (1 + flux_val / 100);\n          } else {\n            if (state.ethereum.price * (1 - flux_val / 100 < 0)) {\n              prices[\"ethereum\"] = 200;\n            } else {\n              prices[\"ethereum\"] = state.ethereum.price * (1 - flux_val / 100);\n            }\n          }\n        } else if (i === 3) {\n          if (up_or_down === 0) {\n            prices[\"bitcoin\"] = state.bitcoin.price * (1 + flux_val / 100);\n          } else {\n            if (state.bitcoin.price * (1 - flux_val / 100) < 0) {\n              prices[\"bitcoin\"] = 1000;\n            } else {\n              prices[\"bitcoin\"] = state.bitcoin.price * (1 - flux_val / 100);\n            }\n          }\n        } else if (i === 4) {\n          if (up_or_down === 0) {\n            prices[\"tron\"] = state.tron.price * (1 + flux_val / 100);\n          } else {\n            if (state.bitcoin.price * (1 - flux_val / 100) < 0) {\n              prices[\"tron\"] = 500;\n            } else {\n              prices[\"tron\"] = state.tron.price * (1 - flux_val / 100);\n            }\n          }\n        }\n      }\n\n      return _objectSpread({}, state, {\n        eos: _objectSpread({}, state.eos, {\n          price: prices.eos\n        }),\n        xrp: _objectSpread({}, state.xrp, {\n          price: prices.xrp\n        }),\n        ethereum: _objectSpread({}, state.ethereum, {\n          price: prices.ethereum\n        }),\n        bitcoin: _objectSpread({}, state.bitcoin, {\n          price: prices.bitcoin\n        }),\n        tron: _objectSpread({}, state.tron, {\n          price: prices.tron\n        })\n      });\n\n    case 'BOUGHT_CRYPTO_STOCK':\n      switch (action.payload.stock) {\n        case 'eos':\n          value = state.eos.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            eos: _objectSpread({}, state.eos, {\n              sharesOwned: value,\n              totalValue: value * state.eos.price\n            })\n          });\n\n        case 'xrp':\n          value = state.xrp.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            xrp: _objectSpread({}, state.xrp, {\n              sharesOwned: value,\n              totalValue: value * state.xrp.price\n            })\n          });\n\n        case 'ethereum':\n          value = state.ethereum.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            ethereum: _objectSpread({}, state.ethereum, {\n              sharesOwned: value,\n              totalValue: value * state.ethereum.price\n            })\n          });\n\n        case 'bitcoin':\n          value = state.bitcoin.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            bitcoin: _objectSpread({}, state.bitcoin, {\n              sharesOwned: value,\n              totalValue: value * state.bitcoin.price\n            })\n          });\n\n        case 'tron':\n          value = state.tron.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            tron: _objectSpread({}, state.tron, {\n              sharesOwned: value,\n              totalValue: value * state.tron.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case 'SOLD_CRYPTO_STOCK':\n      switch (action.payload.stock) {\n        case 'eos':\n          value = state.eos.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            eos: _objectSpread({}, state.eos, {\n              sharesOwned: value,\n              totalValue: value * state.eos.price\n            })\n          });\n\n        case 'xrp':\n          value = state.xrp.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            xrp: _objectSpread({}, state.xrp, {\n              sharesOwned: value,\n              totalValue: value * state.xrp.price\n            })\n          });\n\n        case 'ethereum':\n          value = state.ethereum.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            ethereum: _objectSpread({}, state.ethereum, {\n              sharesOwned: value,\n              totalValue: value * state.ethereum.price\n            })\n          });\n\n        case 'bitcoin':\n          value = state.bitcoin.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            bitcoin: _objectSpread({}, state.bitcoin, {\n              sharesOwned: value,\n              totalValue: value * state.bitcoin.price\n            })\n          });\n\n        case 'tron':\n          value = state.tron.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            tron: _objectSpread({}, state.tron, {\n              sharesOwned: value,\n              totalValue: value * state.tron.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\nexport var techStockReducer = function techStockReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialTechState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var value;\n\n  switch (action.type) {\n    case 'UPDATE_TECH_STOCK_PRICE':\n      var prices = {};\n\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random() * 6;\n\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"apple\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"apple\"] = state.apple.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"apple\"] = state.apple.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"apple\"] = state.apple.price * (1 + flux_val / 100);\n              } else {\n                prices[\"apple\"] = state.apple.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 0) {\n              if (up_or_down === 0) {\n                prices[\"apple\"] = state.apple.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"apple\"] = state.apple.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 0) {\n              if (up_or_down === 0) {\n                prices[\"apple\"] = state.apple.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"apple\"] = state.apple.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"apple\"] = state.apple.price * (1 + flux_val / 100);\n              } else {\n                prices[\"apple\"] = state.apple.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"google\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"google\"] = state.google.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"google\"] = state.google.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"google\"] = state.google.price * (1 + flux_val / 100);\n              } else {\n                prices[\"google\"] = state.google.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 1) {\n              if (up_or_down === 0) {\n                prices[\"google\"] = state.google.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"google\"] = state.google.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 1) {\n              if (up_or_down === 0) {\n                prices[\"google\"] = state.google.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"google\"] = state.google.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"google\"] = state.google.price * (1 + flux_val / 100);\n              } else {\n                prices[\"google\"] = state.google.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"microsoft\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"microsoft\"] = state.microsoft.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"microsoft\"] = state.microsoft.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"microsoft\"] = state.microsoft.price * (1 + flux_val / 100);\n              } else {\n                prices[\"microsoft\"] = state.microsoft.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 2) {\n              if (up_or_down === 0) {\n                prices[\"microsoft\"] = state.microsoft.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"microsoft\"] = state.microsoft.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 2) {\n              if (up_or_down === 0) {\n                prices[\"microsoft\"] = state.microsoft.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"microsoft\"] = state.microsoft.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"microsoft\"] = state.microsoft.price * (1 + flux_val / 100);\n              } else {\n                prices[\"microsoft\"] = state.microsoft.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"facebook\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"facebook\"] = state.facebook.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"facebook\"] = state.facebook.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"facebook\"] = state.facebook.price * (1 + flux_val / 100);\n              } else {\n                prices[\"facebook\"] = state.facebook.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 3) {\n              if (up_or_down === 0) {\n                prices[\"facebook\"] = state.facebook.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"facebook\"] = state.facebook.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 3) {\n              if (up_or_down === 0) {\n                prices[\"facebook\"] = state.facebook.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"facebook\"] = state.facebook.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"facebook\"] = state.facebook.price * (1 + flux_val / 100);\n              } else {\n                prices[\"facebook\"] = state.facebook.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"dropbox\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"dropbox\"] = state.dropbox.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"dropbox\"] = state.dropbox.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"dropbox\"] = state.dropbox.price * (1 + flux_val / 100);\n              } else {\n                prices[\"dropbox\"] = state.dropbox.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 4) {\n              if (up_or_down === 0) {\n                prices[\"dropbox\"] = state.dropbox.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"dropbox\"] = state.dropbox.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 4) {\n              if (up_or_down === 0) {\n                prices[\"dropbox\"] = state.dropbox.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"dropbox\"] = state.dropbox.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"dropbox\"] = state.dropbox.price * (1 + flux_val / 100);\n              } else {\n                prices[\"dropbox\"] = state.dropbox.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        }\n      }\n\n      return _objectSpread({}, state, {\n        apple: _objectSpread({}, state.apple, {\n          price: prices.apple\n        }),\n        google: _objectSpread({}, state.google, {\n          price: prices.google\n        }),\n        microsoft: _objectSpread({}, state.microsoft, {\n          price: prices.microsoft\n        }),\n        facebook: _objectSpread({}, state.facebook, {\n          price: prices.facebook\n        }),\n        dropbox: _objectSpread({}, state.dropbox, {\n          price: prices.dropbox\n        })\n      });\n\n    case 'BOUGHT_TECH_STOCK':\n      // called like boughtStocks(\"apple\", 20)\n      switch (action.payload.stock) {\n        case 'apple':\n          value = state.apple.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            apple: _objectSpread({}, state.apple, {\n              sharesOwned: value,\n              totalValue: value * state.apple.price\n            })\n          });\n\n        case 'google':\n          value = state.google.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            google: _objectSpread({}, state.google, {\n              sharesOwned: value,\n              totalValue: value * state.google.price\n            })\n          });\n\n        case 'microsoft':\n          value = state.microsoft.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            microsoft: _objectSpread({}, state.microsoft, {\n              sharesOwned: value,\n              totalValue: value * state.microsoft.price\n            })\n          });\n\n        case 'facebook':\n          value = state.facebook.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            facebook: _objectSpread({}, state.facebook, {\n              sharesOwned: value,\n              totalValue: value * state.facebook.price\n            })\n          });\n\n        case 'dropbox':\n          value = state.dropbox.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            dropbox: _objectSpread({}, state.dropbox, {\n              sharesOwned: value,\n              totalValue: value * state.dropbox.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case 'SOLD_TECH_STOCK':\n      switch (action.payload.stock) {\n        case 'apple':\n          value = state.apple.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            apple: _objectSpread({}, state.apple, {\n              sharesOwned: value,\n              totalValue: value * state.apple.price\n            })\n          });\n\n        case 'google':\n          value = state.google.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            google: _objectSpread({}, state.google, {\n              sharesOwned: value,\n              totalValue: value * state.google.price\n            })\n          });\n\n        case 'microsoft':\n          value = state.microsoft.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            microsoft: _objectSpread({}, state.microsoft, {\n              sharesOwned: value,\n              totalValue: value * state.microsoft.price\n            })\n          });\n\n        case 'facebook':\n          value = state.facebook.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            facebook: _objectSpread({}, state.facebook, {\n              sharesOwned: value,\n              totalValue: value * state.facebook.price\n            })\n          });\n\n        case 'dropbox':\n          value = state.dropbox.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            dropbox: _objectSpread({}, state.dropbox, {\n              sharesOwned: value,\n              totalValue: value * state.dropbox.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\nexport var clothingStockReducer = function clothingStockReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialClothingState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var value;\n\n  switch (action.type) {\n    case 'UPDATE_CLOTHING_STOCK_PRICE':\n      var prices = {};\n\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random() * 6;\n\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"dior\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"dior\"] = state.dior.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"dior\"] = state.dior.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"dior\"] = state.dior.price * (1 + flux_val / 100);\n              } else {\n                prices[\"dior\"] = state.dior.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 0) {\n              if (up_or_down === 0) {\n                prices[\"dior\"] = state.dior.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"dior\"] = state.dior.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 0) {\n              if (up_or_down === 0) {\n                prices[\"dior\"] = state.dior.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"dior\"] = state.dior.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"dior\"] = state.dior.price * (1 + flux_val / 100);\n              } else {\n                prices[\"dior\"] = state.dior.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"nike\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"nike\"] = state.nike.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"nike\"] = state.nike.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"nike\"] = state.nike.price * (1 + flux_val / 100);\n              } else {\n                prices[\"nike\"] = state.nike.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 1) {\n              if (up_or_down === 0) {\n                prices[\"nike\"] = state.nike.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"nike\"] = state.nike.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 1) {\n              if (up_or_down === 0) {\n                prices[\"nike\"] = state.nike.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"nike\"] = state.nike.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"nike\"] = state.nike.price * (1 + flux_val / 100);\n              } else {\n                prices[\"nike\"] = state.nike.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"adidas\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"adidas\"] = state.adidas.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"adidas\"] = state.adidas.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"adidas\"] = state.adidas.price * (1 + flux_val / 100);\n              } else {\n                prices[\"adidas\"] = state.adidas.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 2) {\n              if (up_or_down === 0) {\n                prices[\"adidas\"] = state.adidas.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"adidas\"] = state.adidas.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 2) {\n              if (up_or_down === 0) {\n                prices[\"adidas\"] = state.adidas.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"adidas\"] = state.adidas.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"adidas\"] = state.adidas.price * (1 + flux_val / 100);\n              } else {\n                prices[\"adidas\"] = state.adidas.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"gucci\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"gucci\"] = state.gucci.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"gucci\"] = state.gucci.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"gucci\"] = state.gucci.price * (1 + flux_val / 100);\n              } else {\n                prices[\"gucci\"] = state.gucci.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 3) {\n              if (up_or_down === 0) {\n                prices[\"gucci\"] = state.gucci.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"gucci\"] = state.gucci.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 3) {\n              if (up_or_down === 0) {\n                prices[\"gucci\"] = state.gucci.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"gucci\"] = state.gucci.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"gucci\"] = state.gucci.price * (1 + flux_val / 100);\n              } else {\n                prices[\"gucci\"] = state.gucci.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"hermes\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"hermes\"] = state.hermes.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"hermes\"] = state.hermes.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"hermes\"] = state.hermes.price * (1 + flux_val / 100);\n              } else {\n                prices[\"hermes\"] = state.hermes.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 4) {\n              if (up_or_down === 0) {\n                prices[\"hermes\"] = state.hermes.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"hermes\"] = state.hermes.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 4) {\n              if (up_or_down === 0) {\n                prices[\"hermes\"] = state.hermes.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"hermes\"] = state.hermes.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"hermes\"] = state.hermes.price * (1 + flux_val / 100);\n              } else {\n                prices[\"hermes\"] = state.hermes.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        }\n      }\n\n      return _objectSpread({}, state, {\n        dior: _objectSpread({}, state.dior, {\n          price: prices.dior\n        }),\n        nike: _objectSpread({}, state.nike, {\n          price: prices.nike\n        }),\n        adidas: _objectSpread({}, state.adidas, {\n          price: prices.adidas\n        }),\n        gucci: _objectSpread({}, state.gucci, {\n          price: prices.gucci\n        }),\n        hermes: _objectSpread({}, state.hermes, {\n          price: prices.hermes\n        })\n      });\n\n    case 'BOUGHT_CLOTHING_STOCK':\n      switch (action.payload.stock) {\n        case 'dior':\n          value = state.dior.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            dior: _objectSpread({}, state.dior, {\n              sharesOwned: value,\n              totalValue: value * state.dior.price\n            })\n          });\n\n        case 'nike':\n          value = state.nike.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            nike: _objectSpread({}, state.nike, {\n              sharesOwned: value,\n              totalValue: value * state.nike.price\n            })\n          });\n\n        case 'adidas':\n          value = state.adidas.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            adidas: _objectSpread({}, state.adidas, {\n              sharesOwned: value,\n              totalValue: value * state.adidas.price\n            })\n          });\n\n        case 'gucci':\n          value = state.gucci.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            gucci: _objectSpread({}, state.gucci, {\n              sharesOwned: value,\n              totalValue: value * state.gucci.price\n            })\n          });\n\n        case 'hermes':\n          value = state.hermes.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            hermes: _objectSpread({}, state.hermes, {\n              sharesOwned: value,\n              totalValue: value * state.hermes.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case 'SOLD_CLOTHING_STOCK':\n      switch (action.payload.stock) {\n        case 'dior':\n          value = state.dior.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            dior: _objectSpread({}, state.dior, {\n              sharesOwned: value,\n              totalValue: value * state.dior.price\n            })\n          });\n\n        case 'nike':\n          value = state.nike.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            nike: _objectSpread({}, state.nike, {\n              sharesOwned: value,\n              totalValue: value * state.nike.price\n            })\n          });\n\n        case 'adidas':\n          value = state.adidas.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            adidas: _objectSpread({}, state.adidas, {\n              sharesOwned: value,\n              totalValue: value * state.adidas.price\n            })\n          });\n\n        case 'gucci':\n          value = state.gucci.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            gucci: _objectSpread({}, state.gucci, {\n              sharesOwned: value,\n              totalValue: value * state.gucci.price\n            })\n          });\n\n        case 'hermes':\n          value = state.hermes.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            hermes: _objectSpread({}, state.hermes, {\n              sharesOwned: value,\n              totalValue: value * state.hermes.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\nexport var foodStockReducer = function foodStockReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialFoodState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var value;\n\n  switch (action.type) {\n    case 'UPDATE_FOOD_STOCK_PRICE':\n      var prices = {};\n\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random() * 6;\n\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"cargill\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"cargill\"] = state.cargill.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"cargill\"] = state.cargill.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"cargill\"] = state.cargill.price * (1 + flux_val / 100);\n              } else {\n                prices[\"cargill\"] = state.cargill.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 0) {\n              if (up_or_down === 0) {\n                prices[\"cargill\"] = state.cargill.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"cargill\"] = state.cargill.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 0) {\n              if (up_or_down === 0) {\n                prices[\"cargill\"] = state.cargill.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"cargill\"] = state.cargill.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"cargill\"] = state.cargill.price * (1 + flux_val / 100);\n              } else {\n                prices[\"cargill\"] = state.cargill.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"nestle\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"nestle\"] = state.nestle.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"nestle\"] = state.nestle.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"nestle\"] = state.nestle.price * (1 + flux_val / 100);\n              } else {\n                prices[\"nestle\"] = state.nestle.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 1) {\n              if (up_or_down === 0) {\n                prices[\"nestle\"] = state.nestle.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"nestle\"] = state.nestle.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 1) {\n              if (up_or_down === 0) {\n                prices[\"nestle\"] = state.nestle.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"nestle\"] = state.nestle.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"nestle\"] = state.nestle.price * (1 + flux_val / 100);\n              } else {\n                prices[\"nestle\"] = state.nestle.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"pepsi\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"pepsi\"] = state.pepsi.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"pepsi\"] = state.pepsi.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"pepsi\"] = state.pepsi.price * (1 + flux_val / 100);\n              } else {\n                prices[\"pepsi\"] = state.pepsi.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 2) {\n              if (up_or_down === 0) {\n                prices[\"pepsi\"] = state.pepsi.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"pepsi\"] = state.pepsi.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 2) {\n              if (up_or_down === 0) {\n                prices[\"pepsi\"] = state.pepsi.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"pepsi\"] = state.pepsi.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"pepsi\"] = state.pepsi.price * (1 + flux_val / 100);\n              } else {\n                prices[\"pepsi\"] = state.pepsi.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"archer\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"archer\"] = state.archer.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"archer\"] = state.archer.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"archer\"] = state.archer.price * (1 + flux_val / 100);\n              } else {\n                prices[\"archer\"] = state.archer.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 3) {\n              if (up_or_down === 0) {\n                prices[\"archer\"] = state.archer.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"archer\"] = state.archer.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 3) {\n              if (up_or_down === 0) {\n                prices[\"archer\"] = state.archer.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"archer\"] = state.archer.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"archer\"] = state.archer.price * (1 + flux_val / 100);\n              } else {\n                prices[\"archer\"] = state.archer.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        } else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound) {\n            if (action.payload.stock === \"sysco\") {\n              if (action.payload.effect === \"positive\") {\n                prices[\"sysco\"] = state.sysco.price * (1 + action.payload.percentChange);\n              } else {\n                prices[\"sysco\"] = state.sysco.price * (1 - action.payload.percentChange);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"sysco\"] = state.sysco.price * (1 + flux_val / 100);\n              } else {\n                prices[\"sysco\"] = state.sysco.price * (1 - flux_val / 100);\n              }\n            }\n          } else {\n            if (state.trend[0] === 4) {\n              if (up_or_down === 0) {\n                prices[\"sysco\"] = state.sysco.price * (1 + state.flux_val_up_pos / 100);\n              } else {\n                prices[\"sysco\"] = state.sysco.price * (1 - state.flux_val_up_neg / 100);\n              }\n            } else if (state.trend[1] === 4) {\n              if (up_or_down === 0) {\n                prices[\"sysco\"] = state.sysco.price * (1 + state.flux_val_down_pos / 100);\n              } else {\n                prices[\"sysco\"] = state.sysco.price * (1 - state.flux_val_down_neg / 100);\n              }\n            } else {\n              if (up_or_down === 0) {\n                prices[\"sysco\"] = state.sysco.price * (1 + flux_val / 100);\n              } else {\n                prices[\"sysco\"] = state.sysco.price * (1 - flux_val / 100);\n              }\n            }\n          }\n        }\n      }\n\n      return _objectSpread({}, state, {\n        cargill: _objectSpread({}, state.cargill, {\n          price: prices.cargill\n        }),\n        nestle: _objectSpread({}, state.nestle, {\n          price: prices.nestle\n        }),\n        pepsi: _objectSpread({}, state.pepsi, {\n          price: prices.pepsi\n        }),\n        archer: _objectSpread({}, state.archer, {\n          price: prices.archer\n        }),\n        sysco: _objectSpread({}, state.sysco, {\n          price: prices.sysco\n        })\n      });\n\n    case 'BOUGHT_FOOD_STOCK':\n      switch (action.payload.stock) {\n        case 'cargill':\n          value = state.cargill.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            cargill: _objectSpread({}, state.cargill, {\n              sharesOwned: value,\n              totalValue: value * state.cargill.price\n            })\n          });\n\n        case 'nestle':\n          value = state.nestle.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            nestle: _objectSpread({}, state.nestle, {\n              sharesOwned: value,\n              totalValue: value * state.nestle.price\n            })\n          });\n\n        case 'pepsi':\n          value = state.pepsi.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            pepsi: _objectSpread({}, state.pepsi, {\n              sharesOwned: value,\n              totalValue: value * state.pepsi.price\n            })\n          });\n\n        case 'archer':\n          value = state.archer.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            archer: _objectSpread({}, state.archer, {\n              sharesOwned: value,\n              totalValue: value * state.archer.price\n            })\n          });\n\n        case 'sysco':\n          value = state.sysco.sharesOwned + action.payload.amount;\n          return _objectSpread({}, state, {\n            sysco: _objectSpread({}, state.sysco, {\n              sharesOwned: value,\n              totalValue: value * state.sysco.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case 'SOLD_FOOD_STOCK':\n      switch (action.payload.stock) {\n        case 'cargill':\n          value = state.cargill.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            cargill: _objectSpread({}, state.cargill, {\n              sharesOwned: value,\n              totalValue: value * state.cargill.price\n            })\n          });\n\n        case 'nestle':\n          value = state.nestle.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            nestle: _objectSpread({}, state.nestle, {\n              sharesOwned: value,\n              totalValue: value * state.nestle.price\n            })\n          });\n\n        case 'pepsi':\n          value = state.pepsi.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            pepsi: _objectSpread({}, state.pepsi, {\n              sharesOwned: value,\n              totalValue: value * state.pepsi.price\n            })\n          });\n\n        case 'archer':\n          value = state.archer.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            archer: _objectSpread({}, state.archer, {\n              sharesOwned: value,\n              totalValue: value * state.archer.price\n            })\n          });\n\n        case 'sysco':\n          value = state.sysco.sharesOwned - action.payload.amount;\n          return _objectSpread({}, state, {\n            sysco: _objectSpread({}, state.sysco, {\n              sharesOwned: value,\n              totalValue: value * state.sysco.price\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/olivier/Downloads/Hedge-Fund-Manager-Official/src/reducers/stocksReducer.js"],"names":["generateTwoRandomNumbers","initialTechState","apple","price","sharesOwned","totalValue","google","microsoft","facebook","dropbox","flux_val_up_pos","Math","random","flux_val_up_neg","flux_val_down_pos","flux_val_down_neg","trend","initialPharmaState","pfizer","novartis","hoffmann","merck","johnson","initialFoodState","cargill","nestle","pepsi","archer","sysco","initialClothingState","dior","nike","adidas","gucci","hermes","initialCryptoState","bitcoin","eos","ethereum","xrp","tron","initialTechPriceState","initialPharmaPriceState","initialFoodPriceState","initialClothingPriceState","initialCryptoPriceState","clothingStockPricesReducer","state","action","type","payload","cryptoStockPricesReducer","techStockPricesReducer","foodStockPricesReducer","pharmaStockPricesReducer","pharmaStockReducer","value","prices","i","up_or_down","floor","flux_val","gameRound","eventRound","stock","effect","percentChange","amount","cryptoStockReducer","techStockReducer","clothingStockReducer","foodStockReducer"],"mappings":";;AAAA,SAASA,wBAAT,QAAyC,cAAzC;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,UAAU,EAAE;AAHP,GADgB;AAMvBC,EAAAA,MAAM,EAAE;AACNH,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,UAAU,EAAE;AAHN,GANe;AAWvBE,EAAAA,SAAS,EAAE;AACTJ,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAXY;AAgBvBG,EAAAA,QAAQ,EAAE;AACRL,IAAAA,KAAK,EAAE,KADC;AAERC,IAAAA,WAAW,EAAE,CAFL;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAhBa;AAqBvBI,EAAAA,OAAO,EAAE;AACPN,IAAAA,KAAK,EAAE,IADA;AAEPC,IAAAA,WAAW,EAAE,CAFN;AAGPC,IAAAA,UAAU,EAAE;AAHL,GArBc;AA0BvBK,EAAAA,eAAe,EAAEC,IAAI,CAACC,MAAL,KAAc,EA1BR;AA2BvBC,EAAAA,eAAe,EAAEF,IAAI,CAACC,MAAL,KAAc,CA3BR;AA4BvBE,EAAAA,iBAAiB,EAAEH,IAAI,CAACC,MAAL,KAAc,CA5BV;AA6BvBG,EAAAA,iBAAiB,EAAEJ,IAAI,CAACC,MAAL,KAAc,CA7BV;AA8BvBI,EAAAA,KAAK,EAAEhB,wBAAwB;AA9BR,CAAzB;AAiCA,IAAMiB,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE;AACNf,IAAAA,KAAK,EAAE,IADD;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,UAAU,EAAE;AAHN,GADiB;AAMzBc,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,KAAK,EAAE,IADC;AAERC,IAAAA,WAAW,EAAE,CAFL;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GANe;AAWzBe,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,KAAK,EAAE,IADC;AAERC,IAAAA,WAAW,EAAE,CAFL;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAXe;AAgBzBgB,EAAAA,KAAK,EAAE;AACLlB,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAhBkB;AAqBzBiB,EAAAA,OAAO,EAAE;AACPnB,IAAAA,KAAK,EAAE,KADA;AAEPC,IAAAA,WAAW,EAAE,CAFN;AAGPC,IAAAA,UAAU,EAAE;AAHL,GArBgB;AA0BzBK,EAAAA,eAAe,EAAEC,IAAI,CAACC,MAAL,KAAc,EA1BN;AA2BzBC,EAAAA,eAAe,EAAEF,IAAI,CAACC,MAAL,KAAc,CA3BN;AA4BzBE,EAAAA,iBAAiB,EAAEH,IAAI,CAACC,MAAL,KAAc,CA5BR;AA6BzBG,EAAAA,iBAAiB,EAAEJ,IAAI,CAACC,MAAL,KAAc,CA7BR;AA8BzBI,EAAAA,KAAK,EAAEhB,wBAAwB;AA9BN,CAA3B;AAiCA,IAAMuB,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE;AACPrB,IAAAA,KAAK,EAAE,IADA;AAEPC,IAAAA,WAAW,EAAE,CAFN;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADc;AAMvBoB,EAAAA,MAAM,EAAE;AACNtB,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,UAAU,EAAE;AAHN,GANe;AAWvBqB,EAAAA,KAAK,EAAE;AACLvB,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAXgB;AAgBvBsB,EAAAA,MAAM,EAAE;AACNxB,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAhBe;AAqBvBuB,EAAAA,KAAK,EAAE;AACLzB,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,UAAU,EAAE;AAHP,GArBgB;AA0BvBK,EAAAA,eAAe,EAAEC,IAAI,CAACC,MAAL,KAAc,EA1BR;AA2BvBC,EAAAA,eAAe,EAAEF,IAAI,CAACC,MAAL,KAAc,CA3BR;AA4BvBE,EAAAA,iBAAiB,EAAEH,IAAI,CAACC,MAAL,KAAc,CA5BV;AA6BvBG,EAAAA,iBAAiB,EAAEJ,IAAI,CAACC,MAAL,KAAc,CA7BV;AA8BvBI,EAAAA,KAAK,EAAEhB,wBAAwB;AA9BR,CAAzB;AAiCA,IAAM6B,oBAAoB,GAAG;AAC3BC,EAAAA,IAAI,EAAE;AACJ3B,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,UAAU,EAAE;AAHR,GADqB;AAM3B0B,EAAAA,IAAI,EAAE;AACJ5B,IAAAA,KAAK,EAAE,IADH;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,UAAU,EAAE;AAHR,GANqB;AAW3B2B,EAAAA,MAAM,EAAE;AACN7B,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAXmB;AAgB3B4B,EAAAA,KAAK,EAAE;AACL9B,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAhBoB;AAqB3B6B,EAAAA,MAAM,EAAE;AACN/B,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,UAAU,EAAE;AAHN,GArBmB;AA0B3BK,EAAAA,eAAe,EAAEC,IAAI,CAACC,MAAL,KAAc,EA1BJ;AA2B3BC,EAAAA,eAAe,EAAEF,IAAI,CAACC,MAAL,KAAc,CA3BJ;AA4B3BE,EAAAA,iBAAiB,EAAEH,IAAI,CAACC,MAAL,KAAc,CA5BN;AA6B3BG,EAAAA,iBAAiB,EAAEJ,IAAI,CAACC,MAAL,KAAc,CA7BN;AA8B3BI,EAAAA,KAAK,EAAEhB,wBAAwB;AA9BJ,CAA7B;AAiCA,IAAMmC,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAE;AACPjC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,WAAW,EAAE,CAFN;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADgB;AAMzBgC,EAAAA,GAAG,EAAE;AACHlC,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,WAAW,EAAE,CAFV;AAGHC,IAAAA,UAAU,EAAE;AAHT,GANoB;AAWzBiC,EAAAA,QAAQ,EAAE;AACRnC,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,WAAW,EAAE,CAFL;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAXe;AAgBzBkC,EAAAA,GAAG,EAAE;AACHpC,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,WAAW,EAAE,CAFV;AAGHC,IAAAA,UAAU,EAAE;AAHT,GAhBoB;AAqBzBmC,EAAAA,IAAI,EAAE;AACJrC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,UAAU,EAAE;AAHR;AArBmB,CAA3B;AA4BA,IAAMoC,qBAAqB,GAAG;AAC5BvC,EAAAA,KAAK,EAAE,EADqB;AAE5BI,EAAAA,MAAM,EAAE,EAFoB;AAG5BC,EAAAA,SAAS,EAAE,EAHiB;AAI5BC,EAAAA,QAAQ,EAAE,EAJkB;AAK5BC,EAAAA,OAAO,EAAE;AALmB,CAA9B;AAQA,IAAMiC,uBAAuB,GAAG;AAC9BxB,EAAAA,MAAM,EAAE,EADsB;AAE9BC,EAAAA,QAAQ,EAAE,EAFoB;AAG9BC,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,KAAK,EAAE,EAJuB;AAK9BC,EAAAA,OAAO,EAAE;AALqB,CAAhC;AAQA,IAAMqB,qBAAqB,GAAG;AAC5BnB,EAAAA,OAAO,EAAE,EADmB;AAE5BC,EAAAA,MAAM,EAAE,EAFoB;AAG5BC,EAAAA,KAAK,EAAE,EAHqB;AAI5BC,EAAAA,MAAM,EAAE,EAJoB;AAK5BC,EAAAA,KAAK,EAAE;AALqB,CAA9B;AAQA,IAAMgB,yBAAyB,GAAG;AAChCd,EAAAA,IAAI,EAAE,EAD0B;AAEhCC,EAAAA,IAAI,EAAE,EAF0B;AAGhCC,EAAAA,MAAM,EAAE,EAHwB;AAIhCC,EAAAA,KAAK,EAAE,EAJyB;AAKhCC,EAAAA,MAAM,EAAE;AALwB,CAAlC;AAQA,IAAMW,uBAAuB,GAAG;AAC9BT,EAAAA,OAAO,EAAE,EADqB;AAE9BC,EAAAA,GAAG,EAAE,EAFyB;AAG9BC,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,GAAG,EAAE,EAJyB;AAK9BC,EAAAA,IAAI,EAAE;AALwB,CAAhC;AAQA,OAAO,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,GAA+C;AAAA,MAA9CC,KAA8C,uEAAtCH,yBAAsC;AAAA,MAAXI,MAAW;;AACvF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,0BAAL;AACE,+BACKF,KADL;AAEEjB,QAAAA,IAAI,+BAAMiB,KAAK,CAACjB,IAAZ,IAAkBkB,MAAM,CAACE,OAAP,CAAepB,IAAjC,EAFN;AAGEC,QAAAA,IAAI,+BAAMgB,KAAK,CAAChB,IAAZ,IAAkBiB,MAAM,CAACE,OAAP,CAAenB,IAAjC,EAHN;AAIEC,QAAAA,MAAM,+BAAMe,KAAK,CAACf,MAAZ,IAAoBgB,MAAM,CAACE,OAAP,CAAelB,MAAnC,EAJR;AAKEC,QAAAA,KAAK,+BAAMc,KAAK,CAACd,KAAZ,IAAmBe,MAAM,CAACE,OAAP,CAAejB,KAAlC,EALP;AAMEC,QAAAA,MAAM,+BAAMa,KAAK,CAACb,MAAZ,IAAoBc,MAAM,CAACE,OAAP,CAAehB,MAAnC;AANR;;AAQF;AACE,aAAOa,KAAP;AAXJ;AAaD,CAdM;AAgBP,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,GAA6C;AAAA,MAA5CJ,KAA4C,uEAApCF,uBAAoC;AAAA,MAAXG,MAAW;;AACnF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,+BACKF,KADL;AAEEV,QAAAA,GAAG,+BAAMU,KAAK,CAACV,GAAZ,IAAiBW,MAAM,CAACE,OAAP,CAAeb,GAAhC,EAFL;AAGED,QAAAA,OAAO,+BAAMW,KAAK,CAACX,OAAZ,IAAqBY,MAAM,CAACE,OAAP,CAAed,OAApC,EAHT;AAIEG,QAAAA,GAAG,+BAAMQ,KAAK,CAACR,GAAZ,IAAiBS,MAAM,CAACE,OAAP,CAAeX,GAAhC,EAJL;AAKEC,QAAAA,IAAI,+BAAMO,KAAK,CAACP,IAAZ,IAAkBQ,MAAM,CAACE,OAAP,CAAeV,IAAjC,EALN;AAMEF,QAAAA,QAAQ,+BAAMS,KAAK,CAACT,QAAZ,IAAsBU,MAAM,CAACE,OAAP,CAAeZ,QAArC;AANV;;AAQF;AACE,aAAOS,KAAP;AAXJ;AAaD,CAdM;AAgBP,OAAO,IAAMK,sBAAsB,GAAG,SAAzBA,sBAAyB,GAA2C;AAAA,MAA1CL,KAA0C,uEAAlCN,qBAAkC;AAAA,MAAXO,MAAW;;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,+BACKF,KADL;AAEE7C,QAAAA,KAAK,+BAAM6C,KAAK,CAAC7C,KAAZ,IAAmB8C,MAAM,CAACE,OAAP,CAAehD,KAAlC,EAFP;AAGEI,QAAAA,MAAM,+BAAMyC,KAAK,CAACzC,MAAZ,IAAoB0C,MAAM,CAACE,OAAP,CAAe5C,MAAnC,EAHR;AAIEG,QAAAA,OAAO,+BAAMsC,KAAK,CAACtC,OAAZ,IAAqBuC,MAAM,CAACE,OAAP,CAAezC,OAApC,EAJT;AAKED,QAAAA,QAAQ,+BAAMuC,KAAK,CAACvC,QAAZ,IAAsBwC,MAAM,CAACE,OAAP,CAAe1C,QAArC,EALV;AAMED,QAAAA,SAAS,+BAAMwC,KAAK,CAACxC,SAAZ,IAAuByC,MAAM,CAACE,OAAP,CAAe3C,SAAtC;AANX;;AAQF;AACE,aAAOwC,KAAP;AAXJ;AAaD,CAdM;AAgBP,OAAO,IAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,GAA2C;AAAA,MAA1CN,KAA0C,uEAAlCJ,qBAAkC;AAAA,MAAXK,MAAW;;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,+BACKF,KADL;AAEEvB,QAAAA,OAAO,+BAAMuB,KAAK,CAACvB,OAAZ,IAAqBwB,MAAM,CAACE,OAAP,CAAe1B,OAApC,EAFT;AAGEC,QAAAA,MAAM,+BAAMsB,KAAK,CAACtB,MAAZ,IAAoBuB,MAAM,CAACE,OAAP,CAAezB,MAAnC,EAHR;AAIEC,QAAAA,KAAK,+BAAMqB,KAAK,CAACrB,KAAZ,IAAmBsB,MAAM,CAACE,OAAP,CAAexB,KAAlC,EAJP;AAKEC,QAAAA,MAAM,+BAAMoB,KAAK,CAACpB,MAAZ,IAAoBqB,MAAM,CAACE,OAAP,CAAevB,MAAnC,EALR;AAMEC,QAAAA,KAAK,+BAAMmB,KAAK,CAACnB,KAAZ,IAAmBoB,MAAM,CAACE,OAAP,CAAetB,KAAlC;AANP;;AAQF;AACE,aAAOmB,KAAP;AAXJ;AAaD,CAdM;AAgBP,OAAO,IAAMO,wBAAwB,GAAG,SAA3BA,wBAA2B,GAA6C;AAAA,MAA5CP,KAA4C,uEAApCL,uBAAoC;AAAA,MAAXM,MAAW;;AACnF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,+BACKF,KADL;AAEE7B,QAAAA,MAAM,+BAAM6B,KAAK,CAAC7B,MAAZ,IAAoB8B,MAAM,CAACE,OAAP,CAAehC,MAAnC,EAFR;AAGEC,QAAAA,QAAQ,+BAAM4B,KAAK,CAAC5B,QAAZ,IAAsB6B,MAAM,CAACE,OAAP,CAAe/B,QAArC,EAHV;AAIEE,QAAAA,KAAK,+BAAM0B,KAAK,CAAC1B,KAAZ,IAAmB2B,MAAM,CAACE,OAAP,CAAe7B,KAAlC,EAJP;AAKEC,QAAAA,OAAO,+BAAMyB,KAAK,CAACzB,OAAZ,IAAqB0B,MAAM,CAACE,OAAP,CAAe5B,OAApC,EALT;AAMEF,QAAAA,QAAQ,+BAAM2B,KAAK,CAAC3B,QAAZ,IAAsB4B,MAAM,CAACE,OAAP,CAAe9B,QAArC;AANV;;AAQF;AACE,aAAO2B,KAAP;AAXJ;AAaD,CAdM,C,CAgBP;;AACA,OAAO,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAwC;AAAA,MAAvCR,KAAuC,uEAA/B9B,kBAA+B;AAAA,MAAX+B,MAAW;AACxE,MAAIQ,KAAJ;;AACA,UAAQR,MAAM,CAACC,IAAf;AACE;AACA;AACA,SAAK,2BAAL;AACE,UAAIQ,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,UAAU,GAAGhD,IAAI,CAACiD,KAAL,CAAWjD,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAjB;AACA,YAAIiD,QAAQ,GAAGlD,IAAI,CAACC,MAAL,KAAc,CAA7B;;AACA,YAAI8C,CAAC,KAAK,CAAV,EAAa;AACX,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,QAA7B,EAAuC;AACrC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAjB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAjB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI+B,KAAK,CAACY,UAAN,KAAqB,CAAzB,EAA2B;AACzBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA5C,CAAnB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA5C,CAAnB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI+B,KAAK,CAACY,UAAN,KAAqB,CAAzB,EAA2B;AACzBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA9C,CAAnB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA9C,CAAnB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAAC7B,MAAN,CAAaf,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF;AACF,SAzCD,MA0CK,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,UAA7B,EAAwC;AACtC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAmBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAnB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAmBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAxC,CAAnB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA9C,CAArB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA9C,CAArB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAAhD,CAArB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAAhD,CAArB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC5B,QAAN,CAAehB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,UAA7B,EAAwC;AACtC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAmBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAnB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAmBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAxC,CAAnB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA9C,CAArB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA9C,CAArB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAAhD,CAArB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAAhD,CAArB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAAC3B,QAAN,CAAejB,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,OAA7B,EAAqC;AACnC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAhB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAhB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA3C,CAAlB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA3C,CAAlB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA7C,CAAlB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA7C,CAAlB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC1B,KAAN,CAAYlB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,SAA7B,EAAuC;AACrC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAlB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAlB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA7C,CAApB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA7C,CAApB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA/C,CAApB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA/C,CAApB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACzB,OAAN,CAAcnB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD;AACF;AACF;AACF;AACF;;AACD,+BAAWd,KAAX;AACc7B,QAAAA,MAAM,oBACD6B,KAAK,CAAC7B,MADL;AAEJf,UAAAA,KAAK,EAAEsD,MAAM,CAACvC;AAFV,UADpB;AAKcC,QAAAA,QAAQ,oBACH4B,KAAK,CAAC5B,QADH;AAENhB,UAAAA,KAAK,EAAEsD,MAAM,CAACtC;AAFR,UALtB;AAScC,QAAAA,QAAQ,oBACH2B,KAAK,CAAC3B,QADH;AAENjB,UAAAA,KAAK,EAAEsD,MAAM,CAACrC;AAFR,UATtB;AAacC,QAAAA,KAAK,oBACA0B,KAAK,CAAC1B,KADN;AAEHlB,UAAAA,KAAK,EAAEsD,MAAM,CAACpC;AAFX,UAbnB;AAiBcC,QAAAA,OAAO,oBACFyB,KAAK,CAACzB,OADJ;AAELnB,UAAAA,KAAK,EAAEsD,MAAM,CAACnC;AAFT;AAjBrB;;AAsBF,SAAK,qBAAL;AACE,cAAQ0B,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,QAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAAC7B,MAAN,CAAad,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACU7B,YAAAA,MAAM,oBACD6B,KAAK,CAAC7B,MADL;AAEJd,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC7B,MAAN,CAAaf;AAH7B;AADhB;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAC5B,QAAN,CAAef,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACU5B,YAAAA,QAAQ,oBACH4B,KAAK,CAAC5B,QADH;AAENf,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC5B,QAAN,CAAehB;AAH7B;AADlB;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAC3B,QAAN,CAAehB,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACU3B,YAAAA,QAAQ,oBACH2B,KAAK,CAAC3B,QADH;AAENhB,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC3B,QAAN,CAAejB;AAH7B;AADlB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAC1B,KAAN,CAAYjB,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACU1B,YAAAA,KAAK,oBACA0B,KAAK,CAAC1B,KADN;AAEHjB,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC1B,KAAN,CAAYlB;AAH7B;AADf;;AAOF,aAAK,SAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACzB,OAAN,CAAclB,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUzB,YAAAA,OAAO,oBACFyB,KAAK,CAACzB,OADJ;AAELlB,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACzB,OAAN,CAAcnB;AAH7B;AADjB;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF,SAAK,mBAAL;AACE,cAAQC,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,QAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAAC7B,MAAN,CAAad,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACU7B,YAAAA,MAAM,oBACD6B,KAAK,CAAC7B,MADL;AAEJd,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC7B,MAAN,CAAaf;AAH7B;AADhB;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAC5B,QAAN,CAAef,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACU5B,YAAAA,QAAQ,oBACH4B,KAAK,CAAC5B,QADH;AAENf,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC5B,QAAN,CAAehB;AAH7B;AADlB;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAC3B,QAAN,CAAehB,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACU3B,YAAAA,QAAQ,oBACH2B,KAAK,CAAC3B,QADH;AAENhB,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC3B,QAAN,CAAejB;AAH7B;AADlB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAC1B,KAAN,CAAYjB,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACU1B,YAAAA,KAAK,oBACA0B,KAAK,CAAC1B,KADN;AAEHjB,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC1B,KAAN,CAAYlB;AAH7B;AADf;;AAOF,aAAK,SAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACzB,OAAN,CAAclB,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUzB,YAAAA,OAAO,oBACFyB,KAAK,CAACzB,OADJ;AAELlB,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACzB,OAAN,CAAcnB;AAH7B;AADjB;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF;AACE,aAAOA,KAAP;AAtVJ;AAwVD,CA1VM;AA4VP,OAAO,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAwC;AAAA,MAAvCrB,KAAuC,uEAA/BZ,kBAA+B;AAAA,MAAXa,MAAW;AACxE,MAAIQ,KAAJ;;AACA,UAAQR,MAAM,CAACC,IAAf;AACE;AACA;AACA,SAAK,2BAAL;AACE,UAAIQ,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,UAAU,GAAGhD,IAAI,CAACiD,KAAL,CAAWjD,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAjB;AACA,YAAIiD,QAAQ,GAAGlD,IAAI,CAACC,MAAL,KAAc,GAA7B;;AACA,YAAI8C,CAAC,KAAK,CAAV,EAAa;AACX,cAAIC,UAAU,KAAK,CAAnB,EAAqB;AACnBF,YAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBV,KAAK,CAACV,GAAN,CAAUlC,KAAV,IAAiB,IAAE0D,QAAQ,GAAC,GAA5B,CAAhB;AACD,WAFD,MAEO;AACL,gBAAId,KAAK,CAACV,GAAN,CAAUlC,KAAV,IAAiB,IAAE0D,QAAQ,GAAC,GAAX,GAAe,CAAhC,CAAJ,EAAwC;AACtCJ,cAAAA,MAAM,CAAC,KAAD,CAAN,GAAc,GAAd;AACD,aAFD,MAGI;AACJA,cAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBV,KAAK,CAACV,GAAN,CAAUlC,KAAV,IAAiB,IAAE0D,QAAQ,GAAC,GAA5B,CAAhB;AACC;AACF;AACF,SAXD,MAYK,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIC,UAAU,KAAK,CAAnB,EAAqB;AACnBF,YAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBV,KAAK,CAACR,GAAN,CAAUpC,KAAV,IAAiB,IAAE0D,QAAQ,GAAC,GAA5B,CAAhB;AACD,WAFD,MAEO;AACL,gBAAId,KAAK,CAACR,GAAN,CAAUpC,KAAV,IAAiB,IAAE0D,QAAQ,GAAC,GAAX,GAAe,CAAhC,CAAJ,EAAuC;AACrCJ,cAAAA,MAAM,CAAC,KAAD,CAAN,GAAc,GAAd;AACD,aAFD,MAGI;AACJA,cAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBV,KAAK,CAACR,GAAN,CAAUpC,KAAV,IAAiB,IAAE0D,QAAQ,GAAC,GAA5B,CAAhB;AACC;AACF;AACF,SAXI,MAYA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIC,UAAU,KAAK,CAAnB,EAAqB;AACnBF,YAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACT,QAAN,CAAenC,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD,WAFD,MAEO;AACL,gBAAId,KAAK,CAACT,QAAN,CAAenC,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAX,GAAe,CAArC,CAAJ,EAA4C;AAC1CJ,cAAAA,MAAM,CAAC,UAAD,CAAN,GAAmB,GAAnB;AACD,aAFD,MAGI;AACJA,cAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACT,QAAN,CAAenC,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACC;AACF;AACF,SAXI,MAYA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIC,UAAU,KAAK,CAAnB,EAAqB;AACnBF,YAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACX,OAAN,CAAcjC,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD,WAFD,MAEO;AACL,gBAAId,KAAK,CAACX,OAAN,CAAcjC,KAAd,IAAuB,IAAE0D,QAAQ,GAAC,GAAlC,IAAuC,CAA3C,EAA6C;AAC3CJ,cAAAA,MAAM,CAAC,SAAD,CAAN,GAAkB,IAAlB;AACD,aAFD,MAGI;AACJA,cAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACX,OAAN,CAAcjC,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACC;AACF;AACF,SAXI,MAYA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIC,UAAU,KAAK,CAAnB,EAAqB;AACnBF,YAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACP,IAAN,CAAWrC,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACD,WAFD,MAEO;AACL,gBAAId,KAAK,CAACX,OAAN,CAAcjC,KAAd,IAAuB,IAAE0D,QAAQ,GAAC,GAAlC,IAAuC,CAA3C,EAA6C;AAC3CJ,cAAAA,MAAM,CAAC,MAAD,CAAN,GAAe,GAAf;AACD,aAFD,MAGI;AACJA,cAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACP,IAAN,CAAWrC,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACC;AACF;AACF;AACF;;AACD,+BAAWd,KAAX;AACcV,QAAAA,GAAG,oBACEU,KAAK,CAACV,GADR;AAEDlC,UAAAA,KAAK,EAAEsD,MAAM,CAACpB;AAFb,UADjB;AAKcE,QAAAA,GAAG,oBACEQ,KAAK,CAACR,GADR;AAEDpC,UAAAA,KAAK,EAAEsD,MAAM,CAAClB;AAFb,UALjB;AAScD,QAAAA,QAAQ,oBACHS,KAAK,CAACT,QADH;AAENnC,UAAAA,KAAK,EAAEsD,MAAM,CAACnB;AAFR,UATtB;AAacF,QAAAA,OAAO,oBACFW,KAAK,CAACX,OADJ;AAELjC,UAAAA,KAAK,EAAEsD,MAAM,CAACrB;AAFT,UAbrB;AAiBcI,QAAAA,IAAI,oBACCO,KAAK,CAACP,IADP;AAEFrC,UAAAA,KAAK,EAAEsD,MAAM,CAACjB;AAFZ;AAjBlB;;AAsBF,SAAK,qBAAL;AACE,cAAQQ,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,KAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAACV,GAAN,CAAUjC,WAAV,GAAwB4C,MAAM,CAACE,OAAP,CAAeiB,MAA/C;AACA,mCAAWpB,KAAX;AACUV,YAAAA,GAAG,oBACEU,KAAK,CAACV,GADR;AAEDjC,cAAAA,WAAW,EAAEoD,KAFZ;AAGDnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACV,GAAN,CAAUlC;AAH7B;AADb;;AAOF,aAAK,KAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACR,GAAN,CAAUnC,WAAV,GAAwB4C,MAAM,CAACE,OAAP,CAAeiB,MAA/C;AACA,mCAAWpB,KAAX;AACUR,YAAAA,GAAG,oBACEQ,KAAK,CAACR,GADR;AAEDnC,cAAAA,WAAW,EAAEoD,KAFZ;AAGDnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACR,GAAN,CAAUpC;AAH7B;AADb;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACT,QAAN,CAAelC,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACUT,YAAAA,QAAQ,oBACHS,KAAK,CAACT,QADH;AAENlC,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACT,QAAN,CAAenC;AAH7B;AADlB;;AAOF,aAAK,SAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACX,OAAN,CAAchC,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUX,YAAAA,OAAO,oBACFW,KAAK,CAACX,OADJ;AAELhC,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACX,OAAN,CAAcjC;AAH7B;AADjB;;AAOF,aAAK,MAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACP,IAAN,CAAWpC,WAAX,GAAyB4C,MAAM,CAACE,OAAP,CAAeiB,MAAhD;AACA,mCAAWpB,KAAX;AACUP,YAAAA,IAAI,oBACCO,KAAK,CAACP,IADP;AAEFpC,cAAAA,WAAW,EAAEoD,KAFX;AAGFnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACP,IAAN,CAAWrC;AAH7B;AADd;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF,SAAK,mBAAL;AACE,cAAQC,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,KAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAACV,GAAN,CAAUjC,WAAV,GAAwB4C,MAAM,CAACE,OAAP,CAAeiB,MAA/C;AACA,mCAAWpB,KAAX;AACUV,YAAAA,GAAG,oBACEU,KAAK,CAACV,GADR;AAEDjC,cAAAA,WAAW,EAAEoD,KAFZ;AAGDnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACV,GAAN,CAAUlC;AAH7B;AADb;;AAOF,aAAK,KAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACR,GAAN,CAAUnC,WAAV,GAAwB4C,MAAM,CAACE,OAAP,CAAeiB,MAA/C;AACA,mCAAWpB,KAAX;AACUR,YAAAA,GAAG,oBACEQ,KAAK,CAACR,GADR;AAEDnC,cAAAA,WAAW,EAAEoD,KAFZ;AAGDnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACR,GAAN,CAAUpC;AAH7B;AADb;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACT,QAAN,CAAelC,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACUT,YAAAA,QAAQ,oBACHS,KAAK,CAACT,QADH;AAENlC,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACT,QAAN,CAAenC;AAH7B;AADlB;;AAOF,aAAK,SAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACX,OAAN,CAAchC,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUX,YAAAA,OAAO,oBACFW,KAAK,CAACX,OADJ;AAELhC,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACX,OAAN,CAAcjC;AAH7B;AADjB;;AAOF,aAAK,MAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACP,IAAN,CAAWpC,WAAX,GAAyB4C,MAAM,CAACE,OAAP,CAAeiB,MAAhD;AACA,mCAAWpB,KAAX;AACUP,YAAAA,IAAI,oBACCO,KAAK,CAACP,IADP;AAEFpC,cAAAA,WAAW,EAAEoD,KAFX;AAGFnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACP,IAAN,CAAWrC;AAH7B;AADd;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF;AACE,aAAOA,KAAP;AAhMJ;AAkMD,CApMM;AAsMP,OAAO,IAAMsB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAsC;AAAA,MAArCtB,KAAqC,uEAA7B9C,gBAA6B;AAAA,MAAX+C,MAAW;AACpE,MAAIQ,KAAJ;;AACA,UAAQR,MAAM,CAACC,IAAf;AACE,SAAK,yBAAL;AACE,UAAIQ,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,UAAU,GAAGhD,IAAI,CAACiD,KAAL,CAAWjD,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAjB;AACA,YAAIiD,QAAQ,GAAGlD,IAAI,CAACC,MAAL,KAAc,CAA7B;;AACA,YAAI8C,CAAC,KAAK,CAAV,EAAa;AACX,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,OAA7B,EAAqC;AACnC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAhB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAhB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA3C,CAAlB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA3C,CAAlB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA7C,CAAlB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA7C,CAAlB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAAC7C,KAAN,CAAYC,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF;AACF,SAzCD,MA0CK,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,QAA7B,EAAsC;AACpC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAjB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAjB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA5C,CAAnB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA5C,CAAnB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA9C,CAAnB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA9C,CAAnB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACzC,MAAN,CAAaH,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,WAA7B,EAAyC;AACvC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAoBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAxC,CAApB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAoBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAzC,CAApB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE0D,QAAQ,GAAC,GAAlC,CAAtB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE0D,QAAQ,GAAC,GAAlC,CAAtB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA/C,CAAtB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA/C,CAAtB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAAjD,CAAtB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAAjD,CAAtB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE0D,QAAQ,GAAC,GAAlC,CAAtB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBV,KAAK,CAACxC,SAAN,CAAgBJ,KAAhB,IAAuB,IAAE0D,QAAQ,GAAC,GAAlC,CAAtB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,UAA7B,EAAwC;AACtC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAmBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAnB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAmBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAxC,CAAnB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA9C,CAArB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA9C,CAArB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAAhD,CAArB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAAhD,CAArB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBV,KAAK,CAACvC,QAAN,CAAeL,KAAf,IAAsB,IAAE0D,QAAQ,GAAC,GAAjC,CAArB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,SAA7B,EAAuC;AACrC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAlB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAlB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA7C,CAApB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA7C,CAApB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA/C,CAApB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA/C,CAApB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACtC,OAAN,CAAcN,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD;AACF;AACF;AACF;AACF;;AACD,+BAAWd,KAAX;AACc7C,QAAAA,KAAK,oBACA6C,KAAK,CAAC7C,KADN;AAEHC,UAAAA,KAAK,EAAEsD,MAAM,CAACvD;AAFX,UADnB;AAKcI,QAAAA,MAAM,oBACDyC,KAAK,CAACzC,MADL;AAEJH,UAAAA,KAAK,EAAEsD,MAAM,CAACnD;AAFV,UALpB;AAScC,QAAAA,SAAS,oBACJwC,KAAK,CAACxC,SADF;AAEPJ,UAAAA,KAAK,EAAEsD,MAAM,CAAClD;AAFP,UATvB;AAacC,QAAAA,QAAQ,oBACHuC,KAAK,CAACvC,QADH;AAENL,UAAAA,KAAK,EAAEsD,MAAM,CAACjD;AAFR,UAbtB;AAiBcC,QAAAA,OAAO,oBACFsC,KAAK,CAACtC,OADJ;AAELN,UAAAA,KAAK,EAAEsD,MAAM,CAAChD;AAFT;AAjBrB;;AAsBF,SAAK,mBAAL;AAA0B;AACxB,cAAQuC,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,OAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAAC7C,KAAN,CAAYE,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACU7C,YAAAA,KAAK,oBACA6C,KAAK,CAAC7C,KADN;AAEHE,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC7C,KAAN,CAAYC;AAH7B;AADf;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACzC,MAAN,CAAaF,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUzC,YAAAA,MAAM,oBACDyC,KAAK,CAACzC,MADL;AAEJF,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACzC,MAAN,CAAaH;AAH7B;AADhB;;AAOF,aAAK,WAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACxC,SAAN,CAAgBH,WAAhB,GAA8B4C,MAAM,CAACE,OAAP,CAAeiB,MAArD;AACA,mCAAWpB,KAAX;AACUxC,YAAAA,SAAS,oBACJwC,KAAK,CAACxC,SADF;AAEPH,cAAAA,WAAW,EAAEoD,KAFN;AAGPnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACxC,SAAN,CAAgBJ;AAH7B;AADnB;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACvC,QAAN,CAAeJ,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACUvC,YAAAA,QAAQ,oBACHuC,KAAK,CAACvC,QADH;AAENJ,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACvC,QAAN,CAAeL;AAH7B;AADlB;;AAOF,aAAK,SAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACtC,OAAN,CAAcL,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUtC,YAAAA,OAAO,oBACFsC,KAAK,CAACtC,OADJ;AAELL,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACtC,OAAN,CAAcN;AAH7B;AADjB;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF,SAAK,iBAAL;AACE,cAAQC,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,OAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAAC7C,KAAN,CAAYE,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACU7C,YAAAA,KAAK,oBACA6C,KAAK,CAAC7C,KADN;AAEHE,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAC7C,KAAN,CAAYC;AAH7B;AADf;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACzC,MAAN,CAAaF,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUzC,YAAAA,MAAM,oBACDyC,KAAK,CAACzC,MADL;AAEJF,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACzC,MAAN,CAAaH;AAH7B;AADhB;;AAOF,aAAK,WAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACxC,SAAN,CAAgBH,WAAhB,GAA8B4C,MAAM,CAACE,OAAP,CAAeiB,MAArD;AACA,mCAAWpB,KAAX;AACUxC,YAAAA,SAAS,oBACJwC,KAAK,CAACxC,SADF;AAEPH,cAAAA,WAAW,EAAEoD,KAFN;AAGPnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACxC,SAAN,CAAgBJ;AAH7B;AADnB;;AAOF,aAAK,UAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACvC,QAAN,CAAeJ,WAAf,GAA6B4C,MAAM,CAACE,OAAP,CAAeiB,MAApD;AACA,mCAAWpB,KAAX;AACUvC,YAAAA,QAAQ,oBACHuC,KAAK,CAACvC,QADH;AAENJ,cAAAA,WAAW,EAAEoD,KAFP;AAGNnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACvC,QAAN,CAAeL;AAH7B;AADlB;;AAOF,aAAK,SAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACtC,OAAN,CAAcL,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUtC,YAAAA,OAAO,oBACFsC,KAAK,CAACtC,OADJ;AAELL,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACtC,OAAN,CAAcN;AAH7B;AADjB;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF;AACE,aAAOA,KAAP;AApVJ;AAsVD,CAxVM;AA0VP,OAAO,IAAMuB,oBAAoB,GAAG,SAAvBA,oBAAuB,GAA0C;AAAA,MAAzCvB,KAAyC,uEAAjClB,oBAAiC;AAAA,MAAXmB,MAAW;AAC5E,MAAIQ,KAAJ;;AACA,UAAQR,MAAM,CAACC,IAAf;AACE,SAAK,6BAAL;AACA,UAAIQ,MAAM,GAAG,EAAb;;AACE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,UAAU,GAAGhD,IAAI,CAACiD,KAAL,CAAWjD,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAjB;AACA,YAAIiD,QAAQ,GAAGlD,IAAI,CAACC,MAAL,KAAc,CAA7B;;AACA,YAAI8C,CAAC,KAAK,CAAV,EAAa;AACX,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,MAA7B,EAAoC;AAClC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAeV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAnC,CAAf;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAeV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAf;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA1C,CAAjB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA1C,CAAjB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA5C,CAAjB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA5C,CAAjB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAACjB,IAAN,CAAW3B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACD;AACF;AACF;AACF,SAzCD,MA0CK,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,MAA7B,EAAoC;AAClC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAeV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAnC,CAAf;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAeV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAf;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA1C,CAAjB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA1C,CAAjB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA5C,CAAjB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA5C,CAAjB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBV,KAAK,CAAChB,IAAN,CAAW5B,KAAX,IAAkB,IAAE0D,QAAQ,GAAC,GAA7B,CAAjB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,QAA7B,EAAsC;AACpC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAjB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAjB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA5C,CAAnB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA5C,CAAnB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA9C,CAAnB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA9C,CAAnB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACf,MAAN,CAAa7B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,OAA7B,EAAqC;AACnC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAhB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAhB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA3C,CAAlB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA3C,CAAlB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA7C,CAAlB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA7C,CAAlB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACd,KAAN,CAAY9B,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,QAA7B,EAAsC;AACpC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAjB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAI6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAjB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA5C,CAAnB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA5C,CAAnB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA9C,CAAnB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA9C,CAAnB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACb,MAAN,CAAa/B,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF;AACF;AACF;;AACD,+BAAWd,KAAX;AACcjB,QAAAA,IAAI,oBACCiB,KAAK,CAACjB,IADP;AAEF3B,UAAAA,KAAK,EAAEsD,MAAM,CAAC3B;AAFZ,UADlB;AAKcC,QAAAA,IAAI,oBACCgB,KAAK,CAAChB,IADP;AAEF5B,UAAAA,KAAK,EAAEsD,MAAM,CAAC1B;AAFZ,UALlB;AAScC,QAAAA,MAAM,oBACDe,KAAK,CAACf,MADL;AAEJ7B,UAAAA,KAAK,EAAEsD,MAAM,CAACzB;AAFV,UATpB;AAacC,QAAAA,KAAK,oBACAc,KAAK,CAACd,KADN;AAEH9B,UAAAA,KAAK,EAAEsD,MAAM,CAACxB;AAFX,UAbnB;AAiBcC,QAAAA,MAAM,oBACDa,KAAK,CAACb,MADL;AAEJ/B,UAAAA,KAAK,EAAEsD,MAAM,CAACvB;AAFV;AAjBpB;;AAsBF,SAAK,uBAAL;AACE,cAAQc,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,MAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAACjB,IAAN,CAAW1B,WAAX,GAAyB4C,MAAM,CAACE,OAAP,CAAeiB,MAAhD;AACA,mCAAWpB,KAAX;AACUjB,YAAAA,IAAI,oBACCiB,KAAK,CAACjB,IADP;AAEF1B,cAAAA,WAAW,EAAEoD,KAFX;AAGFnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACjB,IAAN,CAAW3B;AAH7B;AADd;;AAOF,aAAK,MAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAChB,IAAN,CAAW3B,WAAX,GAAyB4C,MAAM,CAACE,OAAP,CAAeiB,MAAhD;AACA,mCAAWpB,KAAX;AACUhB,YAAAA,IAAI,oBACCgB,KAAK,CAAChB,IADP;AAEF3B,cAAAA,WAAW,EAAEoD,KAFX;AAGFnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAChB,IAAN,CAAW5B;AAH7B;AADd;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACf,MAAN,CAAa5B,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUf,YAAAA,MAAM,oBACDe,KAAK,CAACf,MADL;AAEJ5B,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACf,MAAN,CAAa7B;AAH7B;AADhB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACd,KAAN,CAAY7B,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACUd,YAAAA,KAAK,oBACAc,KAAK,CAACd,KADN;AAEH7B,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACd,KAAN,CAAY9B;AAH7B;AADf;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACb,MAAN,CAAa9B,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUb,YAAAA,MAAM,oBACDa,KAAK,CAACb,MADL;AAEJ9B,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACb,MAAN,CAAa/B;AAH7B;AADhB;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF,SAAK,qBAAL;AACE,cAAQC,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,MAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAACjB,IAAN,CAAW1B,WAAX,GAAyB4C,MAAM,CAACE,OAAP,CAAeiB,MAAhD;AACA,mCAAWpB,KAAX;AACUjB,YAAAA,IAAI,oBACCiB,KAAK,CAACjB,IADP;AAEF1B,cAAAA,WAAW,EAAEoD,KAFX;AAGFnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACjB,IAAN,CAAW3B;AAH7B;AADd;;AAOF,aAAK,MAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAAChB,IAAN,CAAW3B,WAAX,GAAyB4C,MAAM,CAACE,OAAP,CAAeiB,MAAhD;AACA,mCAAWpB,KAAX;AACUhB,YAAAA,IAAI,oBACCgB,KAAK,CAAChB,IADP;AAEF3B,cAAAA,WAAW,EAAEoD,KAFX;AAGFnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAAChB,IAAN,CAAW5B;AAH7B;AADd;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACf,MAAN,CAAa5B,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUf,YAAAA,MAAM,oBACDe,KAAK,CAACf,MADL;AAEJ5B,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACf,MAAN,CAAa7B;AAH7B;AADhB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACd,KAAN,CAAY7B,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACUd,YAAAA,KAAK,oBACAc,KAAK,CAACd,KADN;AAEH7B,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACd,KAAN,CAAY9B;AAH7B;AADf;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACb,MAAN,CAAa9B,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUb,YAAAA,MAAM,oBACDa,KAAK,CAACb,MADL;AAEJ9B,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACb,MAAN,CAAa/B;AAH7B;AADhB;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF;AACE,aAAOA,KAAP;AApVJ;AAsVD,CAxVM;AA0VP,OAAO,IAAMwB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAsC;AAAA,MAArCxB,KAAqC,uEAA7BxB,gBAA6B;AAAA,MAAXyB,MAAW;AACpE,MAAIQ,KAAJ;;AACA,UAAQR,MAAM,CAACC,IAAf;AACE,SAAK,yBAAL;AACE,UAAIQ,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,UAAU,GAAGhD,IAAI,CAACiD,KAAL,CAAWjD,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAjB;AACA,YAAIiD,QAAQ,GAAGlD,IAAI,CAACC,MAAL,KAAc,CAA7B;;AACA,YAAI8C,CAAC,KAAK,CAAV,EAAa;AACX,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,SAA7B,EAAuC;AACrC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAlB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAvC,CAAlB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA7C,CAApB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA7C,CAApB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA/C,CAApB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA/C,CAApB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBV,KAAK,CAACvB,OAAN,CAAcrB,KAAd,IAAqB,IAAE0D,QAAQ,GAAC,GAAhC,CAApB;AACD;AACF;AACF;AACF,SAzCD,MA0CK,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,QAA7B,EAAsC;AACpC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAjB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAjB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA5C,CAAnB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA5C,CAAnB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA9C,CAAnB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA9C,CAAnB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACtB,MAAN,CAAatB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,OAA7B,EAAqC;AACnC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAhB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAhB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA3C,CAAlB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA3C,CAAlB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA7C,CAAlB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA7C,CAAlB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACrB,KAAN,CAAYvB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,QAA7B,EAAsC;AACpC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAArC,CAAjB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAG6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAjB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA5C,CAAnB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA5C,CAAnB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA9C,CAAnB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA9C,CAAnB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,QAAD,CAAN,GAAmBV,KAAK,CAACpB,MAAN,CAAaxB,KAAb,IAAoB,IAAE0D,QAAQ,GAAC,GAA/B,CAAnB;AACD;AACF;AACF;AACF,SAzCI,MA0CA,IAAIH,CAAC,KAAK,CAAV,EAAa;AAChB,cAAIV,MAAM,CAACE,OAAP,CAAeY,SAAf,KAA6Bd,MAAM,CAACE,OAAP,CAAea,UAAhD,EAA2D;AACzD,gBAAIf,MAAM,CAACE,OAAP,CAAec,KAAf,KAAyB,OAA7B,EAAqC;AACnC,kBAAIhB,MAAM,CAACE,OAAP,CAAee,MAAf,KAA0B,UAA9B,EAAyC;AACvCR,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE6C,MAAM,CAACE,OAAP,CAAegB,aAApC,CAAhB;AACD,eAFD,MAGI;AACFT,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAgBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAI6C,MAAM,CAACE,OAAP,CAAegB,aAAtC,CAAhB;AACD;AACF,aAPD,MAQK;AACH,kBAAIP,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF,WAhBD,MAiBK;AACH,gBAAId,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AACvB,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE4C,KAAK,CAACrC,eAAN,GAAsB,GAA3C,CAAlB;AACH,eAFC,MAEK;AACH+C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE4C,KAAK,CAAClC,eAAN,GAAsB,GAA3C,CAAlB;AACD;AACF,aAND,MAOK,IAAIkC,KAAK,CAAC/B,KAAN,CAAY,CAAZ,MAAmB,CAAvB,EAAyB;AAC5B,kBAAI2C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE4C,KAAK,CAACjC,iBAAN,GAAwB,GAA7C,CAAlB;AACH,eAFC,MAEK;AACH2C,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE4C,KAAK,CAAChC,iBAAN,GAAwB,GAA7C,CAAlB;AACD;AACF,aANI,MAOD;AACF,kBAAI4C,UAAU,KAAK,CAAnB,EAAqB;AACnBF,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACH,eAFC,MAEK;AACHJ,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBV,KAAK,CAACnB,KAAN,CAAYzB,KAAZ,IAAmB,IAAE0D,QAAQ,GAAC,GAA9B,CAAlB;AACD;AACF;AACF;AACF;AACF;;AACD,+BAAWd,KAAX;AACcvB,QAAAA,OAAO,oBACFuB,KAAK,CAACvB,OADJ;AAELrB,UAAAA,KAAK,EAAEsD,MAAM,CAACjC;AAFT,UADrB;AAKcC,QAAAA,MAAM,oBACDsB,KAAK,CAACtB,MADL;AAEJtB,UAAAA,KAAK,EAAEsD,MAAM,CAAChC;AAFV,UALpB;AAScC,QAAAA,KAAK,oBACAqB,KAAK,CAACrB,KADN;AAEHvB,UAAAA,KAAK,EAAEsD,MAAM,CAAC/B;AAFX,UATnB;AAacC,QAAAA,MAAM,oBACDoB,KAAK,CAACpB,MADL;AAEJxB,UAAAA,KAAK,EAAEsD,MAAM,CAAC9B;AAFV,UAbpB;AAiBcC,QAAAA,KAAK,oBACAmB,KAAK,CAACnB,KADN;AAEHzB,UAAAA,KAAK,EAAEsD,MAAM,CAAC7B;AAFX;AAjBnB;;AAsBF,SAAK,mBAAL;AACE,cAAQoB,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,SAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAACvB,OAAN,CAAcpB,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUvB,YAAAA,OAAO,oBACFuB,KAAK,CAACvB,OADJ;AAELpB,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACvB,OAAN,CAAcrB;AAH7B;AADjB;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACtB,MAAN,CAAarB,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUtB,YAAAA,MAAM,oBACDsB,KAAK,CAACtB,MADL;AAEJrB,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACtB,MAAN,CAAatB;AAH7B;AADhB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACrB,KAAN,CAAYtB,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACUrB,YAAAA,KAAK,oBACAqB,KAAK,CAACrB,KADN;AAEHtB,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACrB,KAAN,CAAYvB;AAH7B;AADf;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAavB,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUpB,YAAAA,MAAM,oBACDoB,KAAK,CAACpB,MADL;AAEJvB,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAaxB;AAH7B;AADhB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACnB,KAAN,CAAYxB,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACUnB,YAAAA,KAAK,oBACAmB,KAAK,CAACnB,KADN;AAEHxB,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACnB,KAAN,CAAYzB;AAH7B;AADf;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF,SAAK,iBAAL;AACE,cAAQC,MAAM,CAACE,OAAP,CAAec,KAAvB;AACE,aAAK,SAAL;AACER,UAAAA,KAAK,GAAGT,KAAK,CAACvB,OAAN,CAAcpB,WAAd,GAA4B4C,MAAM,CAACE,OAAP,CAAeiB,MAAnD;AACA,mCAAWpB,KAAX;AACUvB,YAAAA,OAAO,oBACFuB,KAAK,CAACvB,OADJ;AAELpB,cAAAA,WAAW,EAAEoD,KAFR;AAGLnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACvB,OAAN,CAAcrB;AAH7B;AADjB;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACtB,MAAN,CAAarB,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUtB,YAAAA,MAAM,oBACDsB,KAAK,CAACtB,MADL;AAEJrB,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACtB,MAAN,CAAatB;AAH7B;AADhB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACrB,KAAN,CAAYtB,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACUrB,YAAAA,KAAK,oBACAqB,KAAK,CAACrB,KADN;AAEHtB,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACrB,KAAN,CAAYvB;AAH7B;AADf;;AAOF,aAAK,QAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAavB,WAAb,GAA2B4C,MAAM,CAACE,OAAP,CAAeiB,MAAlD;AACA,mCAAWpB,KAAX;AACUpB,YAAAA,MAAM,oBACDoB,KAAK,CAACpB,MADL;AAEJvB,cAAAA,WAAW,EAAEoD,KAFT;AAGJnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAaxB;AAH7B;AADhB;;AAOF,aAAK,OAAL;AACEqD,UAAAA,KAAK,GAAGT,KAAK,CAACnB,KAAN,CAAYxB,WAAZ,GAA0B4C,MAAM,CAACE,OAAP,CAAeiB,MAAjD;AACA,mCAAWpB,KAAX;AACUnB,YAAAA,KAAK,oBACAmB,KAAK,CAACnB,KADN;AAEHxB,cAAAA,WAAW,EAAEoD,KAFV;AAGHnD,cAAAA,UAAU,EAAEmD,KAAK,GAAGT,KAAK,CAACnB,KAAN,CAAYzB;AAH7B;AADf;;AAOF;AACE,iBAAO4C,KAAP;AA/CJ;;AAiDF;AACE,aAAOA,KAAP;AApVJ;AAsVD,CAxVM","sourcesContent":["import { generateTwoRandomNumbers } from '../functions';\n\nconst initialTechState = {\n  apple: {\n    price: \"2000\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  google: {\n    price: \"1200\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  microsoft: {\n    price: \"150\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  facebook: {\n    price: \"400\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  dropbox: {\n    price: \"35\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random()*10,\n  flux_val_up_neg: Math.random()*5,\n  flux_val_down_pos: Math.random()*5,\n  flux_val_down_neg: Math.random()*8,\n  trend: generateTwoRandomNumbers()\n}\n\nconst initialPharmaState = {\n  pfizer: {\n    price: \"40\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  novartis: {\n    price: \"90\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  hoffmann: {\n    price: \"25\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  merck: {\n    price: \"80\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  johnson: {\n    price: \"160\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random()*10,\n  flux_val_up_neg: Math.random()*5,\n  flux_val_down_pos: Math.random()*5,\n  flux_val_down_neg: Math.random()*8,\n  trend: generateTwoRandomNumbers()\n}\n\nconst initialFoodState = {\n  cargill: {\n    price: \"10\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  nestle: {\n    price: \"100\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  pepsi: {\n    price: \"100\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  archer: {\n    price: \"5\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  sysco: {\n    price: \"70\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random()*10,\n  flux_val_up_neg: Math.random()*5,\n  flux_val_down_pos: Math.random()*5,\n  flux_val_down_neg: Math.random()*8,\n  trend: generateTwoRandomNumbers()\n}\n\nconst initialClothingState = {\n  dior: {\n    price: \"100\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  nike: {\n    price: \"75\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  adidas: {\n    price: \"200\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  gucci: {\n    price: \"85\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  hermes: {\n    price: \"105\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  flux_val_up_pos: Math.random()*10,\n  flux_val_up_neg: Math.random()*5,\n  flux_val_down_pos: Math.random()*5,\n  flux_val_down_neg: Math.random()*8,\n  trend: generateTwoRandomNumbers()\n}\n\nconst initialCryptoState = {\n  bitcoin: {\n    price: \"5000\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  eos: {\n    price: \"6\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  ethereum: {\n    price: \"2000\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  xrp: {\n    price: \"850\",\n    sharesOwned: 0,\n    totalValue: 0\n  },\n  tron: {\n    price: \"1050\",\n    sharesOwned: 0,\n    totalValue: 0\n  }\n}\n\nconst initialTechPriceState = {\n  apple: [],\n  google: [],\n  microsoft: [],\n  facebook: [],\n  dropbox: []\n}\n\nconst initialPharmaPriceState = {\n  pfizer: [],\n  novartis: [],\n  hoffmann: [],\n  merck: [],\n  johnson: []\n}\n\nconst initialFoodPriceState = {\n  cargill: [],\n  nestle: [],\n  pepsi: [],\n  archer: [],\n  sysco: []\n}\n\nconst initialClothingPriceState = {\n  dior: [],\n  nike: [],\n  adidas: [],\n  gucci: [],\n  hermes: []\n}\n\nconst initialCryptoPriceState = {\n  bitcoin: [],\n  eos: [],\n  ethereum: [],\n  xrp: [],\n  tron: []\n}\n\nexport const clothingStockPricesReducer = (state = initialClothingPriceState, action) => {\n  switch (action.type) {\n    case 'ADD_CLOTHING_STOCK_PRICE':\n      return {\n        ...state,\n        dior: [...state.dior, action.payload.dior],\n        nike: [...state.nike, action.payload.nike],\n        adidas: [...state.adidas, action.payload.adidas],\n        gucci: [...state.gucci, action.payload.gucci],\n        hermes: [...state.hermes, action.payload.hermes]\n      }\n    default:\n      return state;\n  }\n}\n\nexport const cryptoStockPricesReducer = (state = initialCryptoPriceState, action) => {\n  switch (action.type) {\n    case 'ADD_CRYPTO_STOCK_PRICE':\n      return {\n        ...state,\n        eos: [...state.eos, action.payload.eos],\n        bitcoin: [...state.bitcoin, action.payload.bitcoin],\n        xrp: [...state.xrp, action.payload.xrp],\n        tron: [...state.tron, action.payload.tron],\n        ethereum: [...state.ethereum, action.payload.ethereum]\n      }\n    default:\n      return state;\n  }\n}\n\nexport const techStockPricesReducer = (state = initialTechPriceState, action) => {\n  switch (action.type) {\n    case 'ADD_TECH_STOCK_PRICE':\n      return {\n        ...state,\n        apple: [...state.apple, action.payload.apple],\n        google: [...state.google, action.payload.google],\n        dropbox: [...state.dropbox, action.payload.dropbox],\n        facebook: [...state.facebook, action.payload.facebook],\n        microsoft: [...state.microsoft, action.payload.microsoft]\n      }\n    default: \n      return state;\n  }\n}\n\nexport const foodStockPricesReducer = (state = initialFoodPriceState, action) => {\n  switch (action.type) {\n    case 'ADD_FOOD_STOCK_PRICE':\n      return {\n        ...state,\n        cargill: [...state.cargill, action.payload.cargill],\n        nestle: [...state.nestle, action.payload.nestle],\n        pepsi: [...state.pepsi, action.payload.pepsi],\n        archer: [...state.archer, action.payload.archer],\n        sysco: [...state.sysco, action.payload.sysco]\n      }\n    default:\n      return state;\n  }\n}\n\nexport const pharmaStockPricesReducer = (state = initialPharmaPriceState, action) => {\n  switch (action.type) {\n    case 'ADD_PHARMA_STOCK_PRICE':\n      return {\n        ...state,\n        pfizer: [...state.pfizer, action.payload.pfizer],\n        novartis: [...state.novartis, action.payload.novartis],\n        merck: [...state.merck, action.payload.merck],\n        johnson: [...state.johnson, action.payload.johnson],\n        hoffmann: [...state.hoffmann, action.payload.hoffmann]\n      }\n    default:\n      return state;\n  }\n}\n\n// for updating stock prices, stock prices should be in an array\nexport const pharmaStockReducer = (state = initialPharmaState, action) => {  \n  var value;\n  switch (action.type) {\n    // calls update pharma stock by:\n    // updatePharmaStockPrice(stock, values)\n    case 'UPDATE_PHARMA_STOCK_PRICE':\n      var prices = {};\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random()*6;\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"pfizer\") {\n              if (action.payload.effect === \"positive\"){\n                prices[\"pfizer\"]=state.pfizer.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"pfizer\"]=state.pfizer.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"pfizer\"] = state.pfizer.price*(1+flux_val/100);\n            } else {\n                prices[\"pfizer\"] = state.pfizer.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 0){\n              if (state.up_or_down === 0){\n                prices[\"pfizer\"] = state.pfizer.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"pfizer\"] = state.pfizer.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 0){\n              if (state.up_or_down === 0){\n                prices[\"pfizer\"] = state.pfizer.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"pfizer\"] = state.pfizer.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"pfizer\"] = state.pfizer.price*(1+flux_val/100);\n            } else {\n                prices[\"pfizer\"] = state.pfizer.price*(1-flux_val/100);\n              }\n            }\n          }\n        } \n        else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"novartis\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"novartis\"]=state.novartis.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"novartis\"]=state.novartis.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"novartis\"] = state.novartis.price*(1+flux_val/100);\n            } else {\n                prices[\"novartis\"] = state.novartis.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 1){\n              if (up_or_down === 0){\n                prices[\"novartis\"] = state.novartis.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"novartis\"] = state.novartis.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 1){\n              if (up_or_down === 0){\n                prices[\"novartis\"] = state.novartis.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"novartis\"] = state.novartis.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"novartis\"] = state.novartis.price*(1+flux_val/100);\n            } else {\n                prices[\"novartis\"] = state.novartis.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"hoffmann\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"hoffmann\"]=state.hoffmann.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"hoffmann\"]=state.hoffmann.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"hoffmann\"] = state.hoffmann.price*(1+flux_val/100);\n            } else {\n                prices[\"hoffmann\"] = state.hoffmann.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 2){\n              if (up_or_down === 0){\n                prices[\"hoffmann\"] = state.hoffmann.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"hoffmann\"] = state.hoffmann.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 2){\n              if (up_or_down === 0){\n                prices[\"hoffmann\"] = state.hoffmann.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"hoffmann\"] = state.hoffmann.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"hoffmann\"] = state.hoffmann.price*(1+flux_val/100);\n            } else {\n                prices[\"hoffmann\"] = state.hoffmann.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"merck\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"merck\"]=state.merck.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"merck\"]=state.merck.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"merck\"] = state.merck.price*(1+flux_val/100);\n            } else {\n                prices[\"merck\"] = state.merck.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 3){\n              if (up_or_down === 0){\n                prices[\"merck\"] = state.merck.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"merck\"] = state.merck.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 3){\n              if (up_or_down === 0){\n                prices[\"merck\"] = state.merck.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"merck\"] = state.merck.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"merck\"] = state.merck.price*(1+flux_val/100);\n            } else {\n                prices[\"merck\"] = state.merck.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"johnson\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"johnson\"]=state.johnson.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"johnson\"]=state.johnson.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"johnson\"] = state.johnson.price*(1+flux_val/100);\n            } else {\n                prices[\"johnson\"] = state.johnson.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 4){\n              if (up_or_down === 0){\n                prices[\"johnson\"] = state.johnson.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"johnson\"] = state.johnson.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 4){\n              if (up_or_down === 0){\n                prices[\"johnson\"] = state.johnson.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"johnson\"] = state.johnson.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"johnson\"] = state.johnson.price*(1+flux_val/100);\n            } else {\n                prices[\"johnson\"] = state.johnson.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n      }\n      return {...state,\n                    pfizer: {\n                      ...state.pfizer,\n                      price: prices.pfizer\n                    },\n                    novartis: {\n                      ...state.novartis,\n                      price: prices.novartis\n                    },\n                    hoffmann: {\n                      ...state.hoffmann,\n                      price: prices.hoffmann\n                    },\n                    merck: {\n                      ...state.merck,\n                      price: prices.merck\n                    },\n                    johnson: {\n                      ...state.johnson,\n                      price: prices.johnson\n                    }\n      }\n    case 'BOUGHT_PHARMA_STOCK': \n      switch (action.payload.stock) {\n        case 'pfizer':\n          value = state.pfizer.sharesOwned + action.payload.amount;\n          return {...state,\n                    pfizer: {\n                      ...state.pfizer,\n                      sharesOwned: value,\n                      totalValue: value * state.pfizer.price\n                    }\n           }\n        case 'novartis':\n          value = state.novartis.sharesOwned + action.payload.amount;\n          return {...state,\n                    novartis: {\n                      ...state.novartis,\n                      sharesOwned: value,\n                      totalValue: value * state.novartis.price\n                    }\n           }\n        case 'hoffmann':\n          value = state.hoffmann.sharesOwned + action.payload.amount;\n          return {...state,\n                    hoffmann: {\n                      ...state.hoffmann,\n                      sharesOwned: value,\n                      totalValue: value * state.hoffmann.price\n                    }\n           }\n        case 'merck':\n          value = state.merck.sharesOwned + action.payload.amount;\n          return {...state,\n                    merck: {\n                      ...state.merck,\n                      sharesOwned: value,\n                      totalValue: value * state.merck.price\n                    }\n           }\n        case 'johnson':\n          value = state.johnson.sharesOwned + action.payload.amount;\n          return {...state,\n                    johnson: {\n                      ...state.johnson,\n                      sharesOwned: value,\n                      totalValue: value * state.johnson.price\n                    }\n           }\n        default:\n          return state;\n      }\n    case 'SOLD_PHARMA_STOCK':\n      switch (action.payload.stock) {\n        case 'pfizer':\n          value = state.pfizer.sharesOwned - action.payload.amount;\n          return {...state,\n                    pfizer: {\n                      ...state.pfizer,\n                      sharesOwned: value,\n                      totalValue: value * state.pfizer.price\n                    }\n           }\n        case 'novartis':\n          value = state.novartis.sharesOwned - action.payload.amount;\n          return {...state,\n                    novartis: {\n                      ...state.novartis,\n                      sharesOwned: value,\n                      totalValue: value * state.novartis.price\n                    }\n           }\n        case 'hoffmann':\n          value = state.hoffmann.sharesOwned - action.payload.amount;\n          return {...state,\n                    hoffmann: {\n                      ...state.hoffmann,\n                      sharesOwned: value,\n                      totalValue: value * state.hoffmann.price\n                    }\n           }\n        case 'merck':\n          value = state.merck.sharesOwned - action.payload.amount;\n          return {...state,\n                    merck: {\n                      ...state.merck,\n                      sharesOwned: value,\n                      totalValue: value * state.merck.price\n                    }\n           }\n        case 'johnson':\n          value = state.johnson.sharesOwned - action.payload.amount;\n          return {...state,\n                    johnson: {\n                      ...state.johnson,\n                      sharesOwned: value,\n                      totalValue: value * state.johnson.price\n                    }\n           }\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n}\n\nexport const cryptoStockReducer = (state = initialCryptoState, action) => {  \n  var value;\n  switch (action.type) {\n    // calls update pharma stock by:\n    // updatePharmaStockPrice(stock, values)\n    case 'UPDATE_CRYPTO_STOCK_PRICE':\n      var prices = {};\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random()*150;\n        if (i === 0) {\n          if (up_or_down === 0){\n            prices[\"eos\"] = state.eos.price*(1+flux_val/100);\n          } else {\n            if (state.eos.price*(1-flux_val/100<0)) {\n              prices[\"eos\"]=800;\n            }\n            else{\n            prices[\"eos\"] = state.eos.price*(1-flux_val/100);\n            }\n          }\n        }\n        else if (i === 1) {\n          if (up_or_down === 0){\n            prices[\"xrp\"] = state.xrp.price*(1+flux_val/100);\n          } else {\n            if (state.xrp.price*(1-flux_val/100<0)){\n              prices[\"xrp\"]=750;\n            }\n            else{\n            prices[\"xrp\"] = state.xrp.price*(1-flux_val/100);\n            }\n          }\n        }\n        else if (i === 2) {\n          if (up_or_down === 0){\n            prices[\"ethereum\"] = state.ethereum.price*(1+flux_val/100);\n          } else {\n            if (state.ethereum.price*(1-flux_val/100<0)){\n              prices[\"ethereum\"]=200;\n            }\n            else{\n            prices[\"ethereum\"] = state.ethereum.price*(1-flux_val/100);\n            }\n          }\n        }\n        else if (i === 3) {\n          if (up_or_down === 0){\n            prices[\"bitcoin\"] = state.bitcoin.price*(1+flux_val/100);\n          } else {\n            if (state.bitcoin.price * (1-flux_val/100)<0){\n              prices[\"bitcoin\"]=1000;\n            }\n            else{\n            prices[\"bitcoin\"] = state.bitcoin.price*(1-flux_val/100);\n            }\n          }\n        }\n        else if (i === 4) {\n          if (up_or_down === 0){\n            prices[\"tron\"] = state.tron.price*(1+flux_val/100);\n          } else {\n            if (state.bitcoin.price * (1-flux_val/100)<0){\n              prices[\"tron\"]=500;\n            }\n            else{\n            prices[\"tron\"] = state.tron.price*(1-flux_val/100);\n            }\n          }\n        }\n      }\n      return {...state,\n                    eos: {\n                      ...state.eos,\n                      price: prices.eos\n                    },\n                    xrp: {\n                      ...state.xrp,\n                      price: prices.xrp\n                    },\n                    ethereum: {\n                      ...state.ethereum,\n                      price: prices.ethereum\n                    },\n                    bitcoin: {\n                      ...state.bitcoin,\n                      price: prices.bitcoin\n                    },\n                    tron: {\n                      ...state.tron,\n                      price: prices.tron\n                    }\n      }\n    case 'BOUGHT_CRYPTO_STOCK': \n      switch (action.payload.stock) {\n        case 'eos':\n          value = state.eos.sharesOwned + action.payload.amount;\n          return {...state,\n                    eos: {\n                      ...state.eos,\n                      sharesOwned: value,\n                      totalValue: value * state.eos.price\n                    }\n           }\n        case 'xrp':\n          value = state.xrp.sharesOwned + action.payload.amount;\n          return {...state,\n                    xrp: {\n                      ...state.xrp,\n                      sharesOwned: value,\n                      totalValue: value * state.xrp.price\n                    }\n           }\n        case 'ethereum':\n          value = state.ethereum.sharesOwned + action.payload.amount;\n          return {...state,\n                    ethereum: {\n                      ...state.ethereum,\n                      sharesOwned: value,\n                      totalValue: value * state.ethereum.price\n                    }\n           }\n        case 'bitcoin':\n          value = state.bitcoin.sharesOwned + action.payload.amount;\n          return {...state,\n                    bitcoin: {\n                      ...state.bitcoin,\n                      sharesOwned: value,\n                      totalValue: value * state.bitcoin.price\n                    }\n           }\n        case 'tron':\n          value = state.tron.sharesOwned + action.payload.amount;\n          return {...state,\n                    tron: {\n                      ...state.tron,\n                      sharesOwned: value,\n                      totalValue: value * state.tron.price\n                    }\n           }\n        default:\n          return state;\n      }\n    case 'SOLD_CRYPTO_STOCK':\n      switch (action.payload.stock) {\n        case 'eos':\n          value = state.eos.sharesOwned - action.payload.amount;\n          return {...state,\n                    eos: {\n                      ...state.eos,\n                      sharesOwned: value,\n                      totalValue: value * state.eos.price\n                    }\n           }\n        case 'xrp':\n          value = state.xrp.sharesOwned - action.payload.amount;\n          return {...state,\n                    xrp: {\n                      ...state.xrp,\n                      sharesOwned: value,\n                      totalValue: value * state.xrp.price\n                    }\n           }\n        case 'ethereum':\n          value = state.ethereum.sharesOwned - action.payload.amount;\n          return {...state,\n                    ethereum: {\n                      ...state.ethereum,\n                      sharesOwned: value,\n                      totalValue: value * state.ethereum.price\n                    }\n           }\n        case 'bitcoin':\n          value = state.bitcoin.sharesOwned - action.payload.amount;\n          return {...state,\n                    bitcoin: {\n                      ...state.bitcoin,\n                      sharesOwned: value,\n                      totalValue: value * state.bitcoin.price\n                    }\n           }\n        case 'tron':\n          value = state.tron.sharesOwned - action.payload.amount;\n          return {...state,\n                    tron: {\n                      ...state.tron,\n                      sharesOwned: value,\n                      totalValue: value * state.tron.price\n                    }\n           }\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n}\n\nexport const techStockReducer = (state = initialTechState, action) => {\n  var value;\n  switch (action.type) {\n    case 'UPDATE_TECH_STOCK_PRICE':\n      var prices = {};\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random()*6;\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"apple\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"apple\"]=state.apple.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"apple\"]=state.apple.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"apple\"] = state.apple.price*(1+flux_val/100);\n            } else {\n                prices[\"apple\"] = state.apple.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 0){\n              if (up_or_down === 0){\n                prices[\"apple\"] = state.apple.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"apple\"] = state.apple.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 0){\n              if (up_or_down === 0){\n                prices[\"apple\"] = state.apple.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"apple\"] = state.apple.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"apple\"] = state.apple.price*(1+flux_val/100);\n            } else {\n                prices[\"apple\"] = state.apple.price*(1-flux_val/100);\n              }\n            }\n          }\n        } \n        else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"google\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"google\"]=state.google.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"google\"]=state.google.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"google\"] = state.google.price*(1+flux_val/100);\n            } else {\n                prices[\"google\"] = state.google.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 1){\n              if (up_or_down === 0){\n                prices[\"google\"] = state.google.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"google\"] = state.google.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 1){\n              if (up_or_down === 0){\n                prices[\"google\"] = state.google.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"google\"] = state.google.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"google\"] = state.google.price*(1+flux_val/100);\n            } else {\n                prices[\"google\"] = state.google.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"microsoft\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"microsoft\"]=state.microsoft.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"microsoft\"]=state.microsoft.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"microsoft\"] = state.microsoft.price*(1+flux_val/100);\n            } else {\n                prices[\"microsoft\"] = state.microsoft.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 2){\n              if (up_or_down === 0){\n                prices[\"microsoft\"] = state.microsoft.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"microsoft\"] = state.microsoft.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 2){\n              if (up_or_down === 0){\n                prices[\"microsoft\"] = state.microsoft.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"microsoft\"] = state.microsoft.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"microsoft\"] = state.microsoft.price*(1+flux_val/100);\n            } else {\n                prices[\"microsoft\"] = state.microsoft.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"facebook\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"facebook\"]=state.facebook.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"facebook\"]=state.facebook.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"facebook\"] = state.facebook.price*(1+flux_val/100);\n            } else {\n                prices[\"facebook\"] = state.facebook.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 3){\n              if (up_or_down === 0){\n                prices[\"facebook\"] = state.facebook.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"facebook\"] = state.facebook.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 3){\n              if (up_or_down === 0){\n                prices[\"facebook\"] = state.facebook.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"facebook\"] = state.facebook.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"facebook\"] = state.facebook.price*(1+flux_val/100);\n            } else {\n                prices[\"facebook\"] = state.facebook.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"dropbox\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"dropbox\"]=state.dropbox.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"dropbox\"]=state.dropbox.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"dropbox\"] = state.dropbox.price*(1+flux_val/100);\n            } else {\n                prices[\"dropbox\"] = state.dropbox.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 4){\n              if (up_or_down === 0){\n                prices[\"dropbox\"] = state.dropbox.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"dropbox\"] = state.dropbox.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 4){\n              if (up_or_down === 0){\n                prices[\"dropbox\"] = state.dropbox.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"dropbox\"] = state.dropbox.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"dropbox\"] = state.dropbox.price*(1+flux_val/100);\n            } else {\n                prices[\"dropbox\"] = state.dropbox.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n      }\n      return {...state,\n                    apple: {\n                      ...state.apple,\n                      price: prices.apple\n                    },\n                    google: {\n                      ...state.google,\n                      price: prices.google\n                    },\n                    microsoft: {\n                      ...state.microsoft,\n                      price: prices.microsoft\n                    },\n                    facebook: {\n                      ...state.facebook,\n                      price: prices.facebook\n                    },\n                    dropbox: {\n                      ...state.dropbox,\n                      price: prices.dropbox\n                    }\n      }\n    case 'BOUGHT_TECH_STOCK': // called like boughtStocks(\"apple\", 20)\n      switch (action.payload.stock) {\n        case 'apple':\n          value = state.apple.sharesOwned + action.payload.amount;\n          return {...state,\n                    apple: {\n                      ...state.apple,\n                      sharesOwned: value,\n                      totalValue: value * state.apple.price\n                    }\n           }\n        case 'google':\n          value = state.google.sharesOwned + action.payload.amount;\n          return {...state,\n                    google: {\n                      ...state.google,\n                      sharesOwned: value,\n                      totalValue: value * state.google.price\n                    }\n           }\n        case 'microsoft':\n          value = state.microsoft.sharesOwned + action.payload.amount;\n          return {...state,\n                    microsoft: {\n                      ...state.microsoft,\n                      sharesOwned: value,\n                      totalValue: value * state.microsoft.price\n                    }\n           }\n        case 'facebook':\n          value = state.facebook.sharesOwned + action.payload.amount;\n          return {...state,\n                    facebook: {\n                      ...state.facebook,\n                      sharesOwned: value,\n                      totalValue: value * state.facebook.price\n                    }\n           }\n        case 'dropbox':\n          value = state.dropbox.sharesOwned + action.payload.amount;\n          return {...state,\n                    dropbox: {\n                      ...state.dropbox,\n                      sharesOwned: value,\n                      totalValue: value * state.dropbox.price\n                    }\n           }\n        default:\n          return state;\n      }\n    case 'SOLD_TECH_STOCK':\n      switch (action.payload.stock) {\n        case 'apple':\n          value = state.apple.sharesOwned - action.payload.amount;\n          return {...state,\n                    apple: {\n                      ...state.apple,\n                      sharesOwned: value,\n                      totalValue: value * state.apple.price\n                    }\n           }\n        case 'google':\n          value = state.google.sharesOwned - action.payload.amount;\n          return {...state,\n                    google: {\n                      ...state.google,\n                      sharesOwned: value,\n                      totalValue: value * state.google.price\n                    }\n           }\n        case 'microsoft':\n          value = state.microsoft.sharesOwned - action.payload.amount;\n          return {...state,\n                    microsoft: {\n                      ...state.microsoft,\n                      sharesOwned: value,\n                      totalValue: value * state.microsoft.price\n                    }\n           }\n        case 'facebook':\n          value = state.facebook.sharesOwned - action.payload.amount;\n          return {...state,\n                    facebook: {\n                      ...state.facebook,\n                      sharesOwned: value,\n                      totalValue: value * state.facebook.price\n                    }\n           }\n        case 'dropbox':\n          value = state.dropbox.sharesOwned - action.payload.amount;\n          return {...state,\n                    dropbox: {\n                      ...state.dropbox,\n                      sharesOwned: value,\n                      totalValue: value * state.dropbox.price\n                    }\n           }\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n}\n\nexport const clothingStockReducer = (state = initialClothingState, action) => {\n  var value;\n  switch (action.type) {\n    case 'UPDATE_CLOTHING_STOCK_PRICE':\n    var prices = {};\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random()*6;\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"dior\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"dior\"]=state.dior.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"dior\"]=state.dior.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"dior\"] = state.dior.price*(1+flux_val/100);\n            } else {\n                prices[\"dior\"] = state.dior.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 0){\n              if (up_or_down === 0){\n                prices[\"dior\"] = state.dior.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"dior\"] = state.dior.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 0){\n              if (up_or_down === 0){\n                prices[\"dior\"] = state.dior.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"dior\"] = state.dior.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"dior\"] = state.dior.price*(1+flux_val/100);\n            } else {\n                prices[\"dior\"] = state.dior.price*(1-flux_val/100);\n              }\n            }\n          }\n        } \n        else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"nike\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"nike\"]=state.nike.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"nike\"]=state.nike.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"nike\"] = state.nike.price*(1+flux_val/100);\n            } else {\n                prices[\"nike\"] = state.nike.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 1){\n              if (up_or_down === 0){\n                prices[\"nike\"] = state.nike.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"nike\"] = state.nike.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 1){\n              if (up_or_down === 0){\n                prices[\"nike\"] = state.nike.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"nike\"] = state.nike.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"nike\"] = state.nike.price*(1+flux_val/100);\n            } else {\n                prices[\"nike\"] = state.nike.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"adidas\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"adidas\"]=state.adidas.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"adidas\"]=state.adidas.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"adidas\"] = state.adidas.price*(1+flux_val/100);\n            } else {\n                prices[\"adidas\"] = state.adidas.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 2){\n              if (up_or_down === 0){\n                prices[\"adidas\"] = state.adidas.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"adidas\"] = state.adidas.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 2){\n              if (up_or_down === 0){\n                prices[\"adidas\"] = state.adidas.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"adidas\"] = state.adidas.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"adidas\"] = state.adidas.price*(1+flux_val/100);\n            } else {\n                prices[\"adidas\"] = state.adidas.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"gucci\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"gucci\"]=state.gucci.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"gucci\"]=state.gucci.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"gucci\"] = state.gucci.price*(1+flux_val/100);\n            } else {\n                prices[\"gucci\"] = state.gucci.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 3){\n              if (up_or_down === 0){\n                prices[\"gucci\"] = state.gucci.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"gucci\"] = state.gucci.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 3){\n              if (up_or_down === 0){\n                prices[\"gucci\"] = state.gucci.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"gucci\"] = state.gucci.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"gucci\"] = state.gucci.price*(1+flux_val/100);\n            } else {\n                prices[\"gucci\"] = state.gucci.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"hermes\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"hermes\"]=state.hermes.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"hermes\"]=state.hermes.price*(1 - action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"hermes\"] = state.hermes.price*(1+flux_val/100);\n            } else {\n                prices[\"hermes\"] = state.hermes.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 4){\n              if (up_or_down === 0){\n                prices[\"hermes\"] = state.hermes.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"hermes\"] = state.hermes.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 4){\n              if (up_or_down === 0){\n                prices[\"hermes\"] = state.hermes.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"hermes\"] = state.hermes.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"hermes\"] = state.hermes.price*(1+flux_val/100);\n            } else {\n                prices[\"hermes\"] = state.hermes.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n      }\n      return {...state,\n                    dior: {\n                      ...state.dior,\n                      price: prices.dior\n                    },\n                    nike: {\n                      ...state.nike,\n                      price: prices.nike\n                    },\n                    adidas: {\n                      ...state.adidas,\n                      price: prices.adidas\n                    },\n                    gucci: {\n                      ...state.gucci,\n                      price: prices.gucci\n                    },\n                    hermes: {\n                      ...state.hermes,\n                      price: prices.hermes\n                    }\n      }\n    case 'BOUGHT_CLOTHING_STOCK': \n      switch (action.payload.stock) {\n        case 'dior':\n          value = state.dior.sharesOwned + action.payload.amount;\n          return {...state,\n                    dior: {\n                      ...state.dior,\n                      sharesOwned: value,\n                      totalValue: value * state.dior.price\n                    }\n           }\n        case 'nike':\n          value = state.nike.sharesOwned + action.payload.amount;\n          return {...state,\n                    nike: {\n                      ...state.nike,\n                      sharesOwned: value,\n                      totalValue: value * state.nike.price\n                    }\n           }\n        case 'adidas':\n          value = state.adidas.sharesOwned + action.payload.amount;\n          return {...state,\n                    adidas: {\n                      ...state.adidas,\n                      sharesOwned: value,\n                      totalValue: value * state.adidas.price\n                    }\n           }\n        case 'gucci':\n          value = state.gucci.sharesOwned + action.payload.amount;\n          return {...state,\n                    gucci: {\n                      ...state.gucci,\n                      sharesOwned: value,\n                      totalValue: value * state.gucci.price\n                    }\n           }\n        case 'hermes':\n          value = state.hermes.sharesOwned + action.payload.amount;\n          return {...state,\n                    hermes: {\n                      ...state.hermes,\n                      sharesOwned: value,\n                      totalValue: value * state.hermes.price\n                    }\n           }\n        default:\n          return state;\n      }\n    case 'SOLD_CLOTHING_STOCK':\n      switch (action.payload.stock) {\n        case 'dior':\n          value = state.dior.sharesOwned - action.payload.amount;\n          return {...state,\n                    dior: {\n                      ...state.dior,\n                      sharesOwned: value,\n                      totalValue: value * state.dior.price\n                    }\n           }\n        case 'nike':\n          value = state.nike.sharesOwned - action.payload.amount;\n          return {...state,\n                    nike: {\n                      ...state.nike,\n                      sharesOwned: value,\n                      totalValue: value * state.nike.price\n                    }\n           }\n        case 'adidas':\n          value = state.adidas.sharesOwned - action.payload.amount;\n          return {...state,\n                    adidas: {\n                      ...state.adidas,\n                      sharesOwned: value,\n                      totalValue: value * state.adidas.price\n                    }\n           }\n        case 'gucci':\n          value = state.gucci.sharesOwned - action.payload.amount;\n          return {...state,\n                    gucci: {\n                      ...state.gucci,\n                      sharesOwned: value,\n                      totalValue: value * state.gucci.price\n                    }\n           }\n        case 'hermes':\n          value = state.hermes.sharesOwned - action.payload.amount;\n          return {...state,\n                    hermes: {\n                      ...state.hermes,\n                      sharesOwned: value,\n                      totalValue: value * state.hermes.price\n                    }\n           }\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n}\n\nexport const foodStockReducer = (state = initialFoodState, action) => {\n  var value; \n  switch (action.type) {\n    case 'UPDATE_FOOD_STOCK_PRICE':\n      var prices = {};\n      for (var i = 0; i < 5; i++) {\n        var up_or_down = Math.floor(Math.random() * 2);\n        var flux_val = Math.random()*6;\n        if (i === 0) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"cargill\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"cargill\"]=state.cargill.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"cargill\"]=state.cargill.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"cargill\"] = state.cargill.price*(1+flux_val/100);\n            } else {\n                prices[\"cargill\"] = state.cargill.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 0){\n              if (up_or_down === 0){\n                prices[\"cargill\"] = state.cargill.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"cargill\"] = state.cargill.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 0){\n              if (up_or_down === 0){\n                prices[\"cargill\"] = state.cargill.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"cargill\"] = state.cargill.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"cargill\"] = state.cargill.price*(1+flux_val/100);\n            } else {\n                prices[\"cargill\"] = state.cargill.price*(1-flux_val/100);\n              }\n            }\n          }\n        } \n        else if (i === 1) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"nestle\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"nestle\"]=state.nestle.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"nestle\"]=state.nestle.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"nestle\"] = state.nestle.price*(1+flux_val/100);\n            } else {\n                prices[\"nestle\"] = state.nestle.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 1){\n              if (up_or_down === 0){\n                prices[\"nestle\"] = state.nestle.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"nestle\"] = state.nestle.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 1){\n              if (up_or_down === 0){\n                prices[\"nestle\"] = state.nestle.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"nestle\"] = state.nestle.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"nestle\"] = state.nestle.price*(1+flux_val/100);\n            } else {\n                prices[\"nestle\"] = state.nestle.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 2) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"pepsi\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"pepsi\"]=state.pepsi.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"pepsi\"]=state.pepsi.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"pepsi\"] = state.pepsi.price*(1+flux_val/100);\n            } else {\n                prices[\"pepsi\"] = state.pepsi.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 2){\n              if (up_or_down === 0){\n                prices[\"pepsi\"] = state.pepsi.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"pepsi\"] = state.pepsi.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 2){\n              if (up_or_down === 0){\n                prices[\"pepsi\"] = state.pepsi.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"pepsi\"] = state.pepsi.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"pepsi\"] = state.pepsi.price*(1+flux_val/100);\n            } else {\n                prices[\"pepsi\"] = state.pepsi.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 3) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"archer\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"archer\"]=state.archer.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"archer\"]=state.archer.price*(1- action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"archer\"] = state.archer.price*(1+flux_val/100);\n            } else {\n                prices[\"archer\"] = state.archer.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 3){\n              if (up_or_down === 0){\n                prices[\"archer\"] = state.archer.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"archer\"] = state.archer.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 3){\n              if (up_or_down === 0){\n                prices[\"archer\"] = state.archer.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"archer\"] = state.archer.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"archer\"] = state.archer.price*(1+flux_val/100);\n            } else {\n                prices[\"archer\"] = state.archer.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n        else if (i === 4) {\n          if (action.payload.gameRound === action.payload.eventRound){\n            if (action.payload.stock === \"sysco\"){\n              if (action.payload.effect === \"positive\"){\n                prices[\"sysco\"]=state.sysco.price*(1+action.payload.percentChange);\n              }\n              else{\n                prices[\"sysco\"]=state.sysco.price*(1 - action.payload.percentChange);\n              }\n            }\n            else {\n              if (up_or_down === 0){\n                prices[\"sysco\"] = state.sysco.price*(1+flux_val/100);\n            } else {\n                prices[\"sysco\"] = state.sysco.price*(1-flux_val/100);\n              }\n            }\n          }\n          else {\n            if (state.trend[0] === 4){\n              if (up_or_down === 0){\n                prices[\"sysco\"] = state.sysco.price*(1+state.flux_val_up_pos/100);\n            } else {\n                prices[\"sysco\"] = state.sysco.price*(1-state.flux_val_up_neg/100);\n              }\n            }\n            else if (state.trend[1] === 4){\n              if (up_or_down === 0){\n                prices[\"sysco\"] = state.sysco.price*(1+state.flux_val_down_pos/100);\n            } else {\n                prices[\"sysco\"] = state.sysco.price*(1-state.flux_val_down_neg/100);\n              }\n            }\n            else{\n              if (up_or_down === 0){\n                prices[\"sysco\"] = state.sysco.price*(1+flux_val/100);\n            } else {\n                prices[\"sysco\"] = state.sysco.price*(1-flux_val/100);\n              }\n            }\n          }\n        }\n      }\n      return {...state,\n                    cargill: {\n                      ...state.cargill,\n                      price: prices.cargill\n                    },\n                    nestle: {\n                      ...state.nestle,\n                      price: prices.nestle\n                    },\n                    pepsi: {\n                      ...state.pepsi,\n                      price: prices.pepsi\n                    },\n                    archer: {\n                      ...state.archer,\n                      price: prices.archer\n                    },\n                    sysco: {\n                      ...state.sysco,\n                      price: prices.sysco\n                    }\n      }\n    case 'BOUGHT_FOOD_STOCK': \n      switch (action.payload.stock) {\n        case 'cargill':\n          value = state.cargill.sharesOwned + action.payload.amount;\n          return {...state,\n                    cargill: {\n                      ...state.cargill,\n                      sharesOwned: value,\n                      totalValue: value * state.cargill.price\n                    }\n           }\n        case 'nestle':\n          value = state.nestle.sharesOwned + action.payload.amount;\n          return {...state,\n                    nestle: {\n                      ...state.nestle,\n                      sharesOwned: value,\n                      totalValue: value * state.nestle.price\n                    }\n           }\n        case 'pepsi':\n          value = state.pepsi.sharesOwned + action.payload.amount;\n          return {...state,\n                    pepsi: {\n                      ...state.pepsi,\n                      sharesOwned: value,\n                      totalValue: value * state.pepsi.price\n                    }\n           }\n        case 'archer':\n          value = state.archer.sharesOwned + action.payload.amount;\n          return {...state,\n                    archer: {\n                      ...state.archer,\n                      sharesOwned: value,\n                      totalValue: value * state.archer.price\n                    }\n           }\n        case 'sysco':\n          value = state.sysco.sharesOwned + action.payload.amount;\n          return {...state,\n                    sysco: {\n                      ...state.sysco,\n                      sharesOwned: value,\n                      totalValue: value * state.sysco.price\n                    }\n           }\n        default:\n          return state;\n      }\n    case 'SOLD_FOOD_STOCK':\n      switch (action.payload.stock) {\n        case 'cargill':\n          value = state.cargill.sharesOwned - action.payload.amount;\n          return {...state,\n                    cargill: {\n                      ...state.cargill,\n                      sharesOwned: value,\n                      totalValue: value * state.cargill.price\n                    }\n           }\n        case 'nestle':\n          value = state.nestle.sharesOwned - action.payload.amount;\n          return {...state,\n                    nestle: {\n                      ...state.nestle,\n                      sharesOwned: value,\n                      totalValue: value * state.nestle.price\n                    }\n           }\n        case 'pepsi':\n          value = state.pepsi.sharesOwned - action.payload.amount;\n          return {...state,\n                    pepsi: {\n                      ...state.pepsi,\n                      sharesOwned: value,\n                      totalValue: value * state.pepsi.price\n                    }\n           }\n        case 'archer':\n          value = state.archer.sharesOwned - action.payload.amount;\n          return {...state,\n                    archer: {\n                      ...state.archer,\n                      sharesOwned: value,\n                      totalValue: value * state.archer.price\n                    }\n           }\n        case 'sysco':\n          value = state.sysco.sharesOwned - action.payload.amount;\n          return {...state,\n                    sysco: {\n                      ...state.sysco,\n                      sharesOwned: value,\n                      totalValue: value * state.sysco.price\n                    }\n           }\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}