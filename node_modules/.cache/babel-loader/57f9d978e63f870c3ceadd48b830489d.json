{"ast":null,"code":"var _jsxFileName = \"/Users/olivier/Downloads/Hedge-Fund-Manager-Official/src/Header.js\";\nimport React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { castToDollar, convertDateToString } from './functions';\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n  var color;\n\n  if (props.stats.netCash > props.stats.lastNetWorth) {\n    color = \"green\";\n  } else if (props.stats.netCash < props.stats.lastNetWorth) {\n    color = \"red\";\n  } else {\n    color = \"black\";\n  }\n\n  return React.createElement(Menu, {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"hedgefund\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Hedge Fund\")), React.createElement(Menu.Item, {\n    name: \"netcash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Net Cash: $\", castToDollar(props.stats.netWorth)), React.createElement(Menu.Item, {\n    name: \"networth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" Net Worth: $\", castToDollar(props.stats.netCash))), React.createElement(Menu.Item, {\n    name: \"criminalLevel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Criminal Level: \", props.stats.criminalLevel, \"%\"), React.createElement(Menu.Item, {\n    name: \"publicRep\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Public Rep: \", props.stats.publicRep, \"%\"), React.createElement(Menu.Menu, {\n    position: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, convertDateToString(props.stats.date.month, props.stats.date.year)), React.createElement(Menu.Item, {\n    name: \"instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Instructions\"))));\n}\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stats: state.stats\n  };\n};\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/Users/olivier/Downloads/Hedge-Fund-Manager-Official/src/Header.js"],"names":["React","Menu","Icon","connect","castToDollar","convertDateToString","Link","Header","props","color","stats","netCash","lastNetWorth","marginTop","netWorth","criminalLevel","publicRep","date","month","year","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { castToDollar, convertDateToString } from './functions';\nimport { Link } from 'react-router-dom';\n\n\nfunction Header(props) {\n  var color;\n  if (props.stats.netCash > props.stats.lastNetWorth) {\n    color = \"green\";\n  } else if (props.stats.netCash < props.stats.lastNetWorth) {\n    color = \"red\";\n  } else {\n    color = \"black\";\n  }\n\n  return (\n    <Menu style={{marginTop: \"10px\"}}>\n      <Menu.Item name=\"hedgefund\">\n        <Link to=\"/\">Hedge Fund</Link>\n      </Menu.Item>\n      <Menu.Item name=\"netcash\">\n        Net Cash: ${castToDollar(props.stats.netWorth)}\n      </Menu.Item>\n      <Menu.Item name=\"networth\">\n        <span style={{color: color}}> Net Worth: ${castToDollar(props.stats.netCash)}</span>\n      </Menu.Item>\n      <Menu.Item name=\"criminalLevel\">\n        Criminal Level: {props.stats.criminalLevel}%\n      </Menu.Item>\n      <Menu.Item name=\"publicRep\">\n        Public Rep: {props.stats.publicRep}%\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item name=\"date\">\n          {convertDateToString(props.stats.date.month, props.stats.date.year)}\n        </Menu.Item>\n        <Menu.Item name=\"instructions\">\n          <Link to=\"/instructions\">\n            Instructions\n          </Link>\n        </Menu.Item>\n      </Menu.Menu>\n\n    </Menu>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { stats: state.stats };\n};\n\nexport default connect(\n  mapStateToProps\n)(Header);"]},"metadata":{},"sourceType":"module"}